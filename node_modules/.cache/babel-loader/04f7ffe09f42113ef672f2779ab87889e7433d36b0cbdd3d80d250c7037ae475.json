{"ast":null,"code":"var _jsxFileName = \"/Users/nishidanaoto/ateori-app/src/components/pages/VotePage.tsx\",\n  _s = $RefreshSig$();\nimport { memo, useCallback, useContext, useEffect, useRef } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { Spinner, Wrap, WrapItem, Center, useDisclosure } from \"@chakra-ui/react\";\nimport { LoginUserContext } from '../../providers/LoginUserProvider';\nimport { useAllTournament } from \"../../hooks/useAllTournament\";\nimport { TournamentCard } from \"../organisms/tournament/TournamentCard\";\nimport { useSelectTournament } from \"../../hooks/useSelectTournament\";\nimport { TournamentDetailModal } from \"../organisms/tournament/TournamentDetailModel\";\nimport { BaseButton } from \"../atoms/button/BaseButton\";\nimport { useAllParticipant } from \"../../hooks/useAllParticipant\";\nimport { useAllResult } from \"../../hooks/useAllResult\";\nimport { useAllClass } from \"../../hooks/useAllClass\";\nimport { useLoginUser } from \"../../hooks/useLoginUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const VotePage = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(() => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    setLoginUser\n  } = useContext(LoginUserContext);\n  const timerId = useRef(null);\n  const {\n    getTournaments,\n    tournaments,\n    loading\n  } = useAllTournament();\n  const {\n    onSelectTournament,\n    selectedTournament\n  } = useSelectTournament();\n  const {\n    isOpen: isTournamentDetailOpen,\n    onOpen: onTournamentDetailOpen,\n    onClose: onTournamentDetailClose\n  } = useDisclosure();\n  const {\n    getUsers,\n    users1,\n    users2,\n    users3,\n    users4\n  } = useAllParticipant();\n  const {\n    getResults,\n    usersR1,\n    usersR2\n  } = useAllResult();\n  const {\n    getClases,\n    clases,\n    loading2\n  } = useAllClass();\n  const {\n    isOpen: isResultOpen,\n    onOpen: onResultOpen,\n    onClose: onResultClose\n  } = useDisclosure();\n  const {\n    loginUser\n  } = useLoginUser();\n\n  // 自動ログアウトの時間（ミリ秒）\n  const autoLogoutTime = 600000; // 10分\n  //const autoLogoutTime = 10000; // 10秒\n\n  useEffect(() => {\n    const resetTimer = () => {\n      // タイマーをリセット\n      if (timerId.current) {\n        clearTimeout(timerId.current);\n      }\n\n      // 新たなタイマーをセット\n      timerId.current = setTimeout(() => {\n        // ログアウト処理（例: setLoginUser(null)）\n        setLoginUser(null);\n\n        // トップページにリダイレクト\n        navigate('/');\n      }, autoLogoutTime);\n    };\n\n    // ユーザーがアクションを起こすたびにタイマーをリセット\n    const resetTimerOnAction = () => {\n      resetTimer();\n    };\n\n    // 初回実行時にタイマーをセット\n    resetTimer();\n\n    // ユーザーのアクション（例: クリック）があった場合にタイマーをリセット\n    document.addEventListener('click', resetTimerOnAction);\n    return () => {\n      // コンポーネントがアンマウントされたときにクリア\n      if (timerId.current) {\n        clearTimeout(timerId.current);\n      }\n      document.removeEventListener('click', resetTimerOnAction);\n    };\n  }, [setLoginUser, navigate, timerId]);\n\n  // loginUserが存在するかどうかのチェック\n  useEffect(() => {\n    // loginUserが存在しない場合、トップページに遷移\n    if (!loginUser) {\n      navigate('/');\n    }\n  }, [loginUser, navigate]);\n  useEffect(() => getTournaments(), [getTournaments]);\n  const onClickTournament = useCallback(async tournamentId => {\n    const userId = Array.isArray(loginUser) ? loginUser[0].id : loginUser === null || loginUser === void 0 ? void 0 : loginUser.id;\n    try {\n      // getClasesを実行\n      const newClases = await getClases(tournamentId);\n\n      // 取得したデータを使用してgetUsersを実行\n      const stringClasses = newClases.map(participant => participant.className);\n      await getUsers(userId, tournamentId, stringClasses);\n\n      // 適切なデータが揃った後にトーナメントの選択処理を実行\n      onSelectTournament({\n        tournamentId,\n        tournaments,\n        onTournamentDetailOpen\n      });\n    } catch (error) {\n      // エラーハンドリング（必要に応じて）\n      console.error(\"Error during onClickTournament:\", error);\n    }\n  }, [tournaments, onSelectTournament, onTournamentDetailOpen, getClases, getUsers, clases]);\n  const onClickResult = useCallback(async tournamentId => {\n    try {\n      // getClasesを実行\n      const newClases = await getClases(tournamentId);\n\n      // 取得したデータを使用してgetUsersを実行\n      const stringClasses = newClases.map(participant => participant.className);\n      await getResults(tournamentId, stringClasses);\n\n      // 適切なデータが揃った後にトーナメントの選択処理を実行\n      onSelectTournament({\n        tournamentId,\n        tournaments,\n        onTournamentDetailOpen\n      });\n    } catch (error) {\n      // エラーハンドリング（必要に応じて）\n      console.error(\"Error during onClickTournament:\", error);\n    }\n  }, [tournaments, onSelectTournament, onTournamentDetailOpen, getClases, getUsers, clases]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading ? /*#__PURE__*/_jsxDEV(Center, {\n      h: \"100vh\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Wrap, {\n      p: {\n        base: 4,\n        md: 10\n      },\n      children: tournaments.map(tournament => /*#__PURE__*/_jsxDEV(WrapItem, {\n        mx: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(TournamentCard, {\n          tournamentName: tournament.tournamentName,\n          eventDate2: tournament.eventDate2,\n          children: [/*#__PURE__*/_jsxDEV(BaseButton, {\n            tournamentId: tournament.tournamentId,\n            loading: loading2,\n            onClick: onClickTournament,\n            children: \"\\u4E88\\u60F3\\u3059\\u308B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(BaseButton, {\n            tournamentId: tournament.tournamentId,\n            loading: loading2,\n            onClick: onClickResult,\n            children: \"\\u7D50\\u679C\\u898B\\u308B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this)\n      }, tournament.tournamentId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TournamentDetailModal, {\n      userId: Array.isArray(loginUser) ? loginUser[0].id : loginUser === null || loginUser === void 0 ? void 0 : loginUser.id,\n      selectedTournament: selectedTournament,\n      users1: users1,\n      users2: users2,\n      users3: users3,\n      users4: users4,\n      clases: clases,\n      isOpen: isTournamentDetailOpen,\n      onClose: onTournamentDetailClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TournamentDetailModal, {\n      userId: Array.isArray(loginUser) ? loginUser[0].id : loginUser === null || loginUser === void 0 ? void 0 : loginUser.id,\n      selectedTournament: selectedTournament,\n      users1: users1,\n      users2: users2,\n      users3: users3,\n      users4: users4,\n      clases: clases,\n      isOpen: isTournamentDetailOpen,\n      onClose: onTournamentDetailClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n}, \"RoLtkrCsbi3fsC2dvry7GHqczaA=\", false, function () {\n  return [useNavigate, useAllTournament, useSelectTournament, useDisclosure, useAllParticipant, useAllResult, useAllClass, useDisclosure, useLoginUser];\n})), \"RoLtkrCsbi3fsC2dvry7GHqczaA=\", false, function () {\n  return [useNavigate, useAllTournament, useSelectTournament, useDisclosure, useAllParticipant, useAllResult, useAllClass, useDisclosure, useLoginUser];\n});\n_c2 = VotePage;\nvar _c, _c2;\n$RefreshReg$(_c, \"VotePage$memo\");\n$RefreshReg$(_c2, \"VotePage\");","map":{"version":3,"names":["memo","useCallback","useContext","useEffect","useRef","useNavigate","Spinner","Wrap","WrapItem","Center","useDisclosure","LoginUserContext","useAllTournament","TournamentCard","useSelectTournament","TournamentDetailModal","BaseButton","useAllParticipant","useAllResult","useAllClass","useLoginUser","jsxDEV","_jsxDEV","Fragment","_Fragment","VotePage","_s","_c","navigate","setLoginUser","timerId","getTournaments","tournaments","loading","onSelectTournament","selectedTournament","isOpen","isTournamentDetailOpen","onOpen","onTournamentDetailOpen","onClose","onTournamentDetailClose","getUsers","users1","users2","users3","users4","getResults","usersR1","usersR2","getClases","clases","loading2","isResultOpen","onResultOpen","onResultClose","loginUser","autoLogoutTime","resetTimer","current","clearTimeout","setTimeout","resetTimerOnAction","document","addEventListener","removeEventListener","onClickTournament","tournamentId","userId","Array","isArray","id","newClases","stringClasses","map","participant","className","error","console","onClickResult","children","h","fileName","_jsxFileName","lineNumber","columnNumber","p","base","md","tournament","mx","tournamentName","eventDate2","onClick","_c2","$RefreshReg$"],"sources":["/Users/nishidanaoto/ateori-app/src/components/pages/VotePage.tsx"],"sourcesContent":["import { memo, useCallback, useContext, useEffect, useRef } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Spinner,\n  Wrap,\n  WrapItem,\n  Center,\n  useDisclosure,\n} from \"@chakra-ui/react\";\n\nimport { LoginUserContext } from '../../providers/LoginUserProvider';\nimport { useAllTournament } from \"../../hooks/useAllTournament\";\nimport { TournamentCard } from \"../organisms/tournament/TournamentCard\";\nimport { useSelectTournament } from \"../../hooks/useSelectTournament\";\nimport { TournamentDetailModal } from \"../organisms/tournament/TournamentDetailModel\";\nimport { ResultDetailModal } from \"../organisms/tournament/ResultDetailModel\";\nimport { BaseButton } from \"../atoms/button/BaseButton\";\nimport { useAllParticipant } from \"../../hooks/useAllParticipant\";\nimport { useAllResult } from \"../../hooks/useAllResult\";\nimport { useAllClass } from \"../../hooks/useAllClass\";\nimport { useLoginUser } from \"../../hooks/useLoginUser\";\n\nexport const VotePage = memo(() => {\n\n  const navigate = useNavigate();\n  const { setLoginUser } = useContext(LoginUserContext);\n  const timerId = useRef<NodeJS.Timeout | null>(null);\n  const { getTournaments, tournaments, loading } = useAllTournament();\n  const { onSelectTournament, selectedTournament } = useSelectTournament();\n  const { isOpen: isTournamentDetailOpen, onOpen: onTournamentDetailOpen, onClose: onTournamentDetailClose } = useDisclosure();\n  const { getUsers, users1, users2, users3, users4 } = useAllParticipant();\n  const{getResults, usersR1, usersR2} = useAllResult();\n  const { getClases, clases, loading2} = useAllClass();\n  const { isOpen: isResultOpen, onOpen: onResultOpen, onClose: onResultClose } = useDisclosure();\n  const { loginUser } = useLoginUser();\n\n  // 自動ログアウトの時間（ミリ秒）\n  const autoLogoutTime = 600000; // 10分\n  //const autoLogoutTime = 10000; // 10秒\n\n  useEffect(() => {\n    const resetTimer = () => {\n      // タイマーをリセット\n      if (timerId.current) {\n        clearTimeout(timerId.current);\n      }\n\n      // 新たなタイマーをセット\n      timerId.current = setTimeout(() => {\n        // ログアウト処理（例: setLoginUser(null)）\n        setLoginUser(null);\n\n        // トップページにリダイレクト\n        navigate('/');\n      }, autoLogoutTime);\n    };\n\n    // ユーザーがアクションを起こすたびにタイマーをリセット\n    const resetTimerOnAction = () => {\n      resetTimer();\n    };\n\n    // 初回実行時にタイマーをセット\n    resetTimer();\n\n    // ユーザーのアクション（例: クリック）があった場合にタイマーをリセット\n    document.addEventListener('click', resetTimerOnAction);\n\n    return () => {\n      // コンポーネントがアンマウントされたときにクリア\n      if (timerId.current) {\n        clearTimeout(timerId.current);\n      }\n      document.removeEventListener('click', resetTimerOnAction);\n    };\n  }, [setLoginUser, navigate, timerId]);\n\n  // loginUserが存在するかどうかのチェック\n  useEffect(() => {\n    // loginUserが存在しない場合、トップページに遷移\n    if (!loginUser) {\n      navigate('/');\n    }\n  }, [loginUser, navigate]);\n\n  useEffect(() => getTournaments(), [getTournaments]);\n\n  const onClickTournament = useCallback(\n    async (tournamentId: number) => {\n      const userId = Array.isArray(loginUser) ? loginUser[0].id : loginUser?.id;\n      try {\n        // getClasesを実行\n        const newClases = await getClases(tournamentId);\n  \n        // 取得したデータを使用してgetUsersを実行\n        const stringClasses = newClases.map(participant => participant.className);\n        await getUsers(userId, tournamentId, stringClasses);\n  \n        // 適切なデータが揃った後にトーナメントの選択処理を実行\n        onSelectTournament({ tournamentId, tournaments, onTournamentDetailOpen });\n      } catch (error) {\n        // エラーハンドリング（必要に応じて）\n        console.error(\"Error during onClickTournament:\", error);\n      }\n    },\n    [tournaments, onSelectTournament, onTournamentDetailOpen, getClases, getUsers, clases]\n  );\n\n  const onClickResult = useCallback(\n    async (tournamentId: number) => {\n      try {\n        // getClasesを実行\n        const newClases = await getClases(tournamentId);\n  \n        // 取得したデータを使用してgetUsersを実行\n        const stringClasses = newClases.map(participant => participant.className);\n        await getResults( tournamentId, stringClasses);\n  \n        // 適切なデータが揃った後にトーナメントの選択処理を実行\n        onSelectTournament({ tournamentId, tournaments, onTournamentDetailOpen });\n      } catch (error) {\n        // エラーハンドリング（必要に応じて）\n        console.error(\"Error during onClickTournament:\", error);\n      }\n    },\n    [tournaments, onSelectTournament, onTournamentDetailOpen, getClases, getUsers, clases]\n  );\n      \n  return (\n    <>\n      {loading ? (\n        <Center h=\"100vh\">\n          <Spinner />\n        </Center>\n      ) : (\n        <Wrap p={{ base: 4, md: 10 }}>\n          {tournaments.map((tournament) => (\n            <WrapItem key={tournament.tournamentId} mx=\"auto\">\n              <TournamentCard\n                tournamentName={tournament.tournamentName}\n                eventDate2={tournament.eventDate2}\n              > \n                <BaseButton\n                  tournamentId={tournament.tournamentId}\n                  loading={loading2}\n                  onClick={onClickTournament}\n                >\n                  予想する\n                </BaseButton>\n                <BaseButton\n                  tournamentId={tournament.tournamentId}\n                  loading={loading2}\n                  onClick={onClickResult}\n                >\n                  結果見る\n                </BaseButton>\n              </TournamentCard>\n            </WrapItem>\n          ))}\n        </Wrap>\n      )}\n      <TournamentDetailModal\n        userId={Array.isArray(loginUser) ? loginUser[0].id : loginUser?.id}\n        selectedTournament={selectedTournament}\n        users1={users1}\n        users2={users2}\n        users3={users3}\n        users4={users4}\n        clases={clases}\n        isOpen={isTournamentDetailOpen}\n        onClose={onTournamentDetailClose}\n      />\n       <TournamentDetailModal\n        userId={Array.isArray(loginUser) ? loginUser[0].id : loginUser?.id}\n        selectedTournament={selectedTournament}\n        users1={users1}\n        users2={users2}\n        users3={users3}\n        users4={users4}\n        clases={clases}\n        isOpen={isTournamentDetailOpen}\n        onClose={onTournamentDetailClose}\n      />\n    </>\n  );\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}