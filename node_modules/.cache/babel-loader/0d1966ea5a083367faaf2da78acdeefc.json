{"ast":null,"code":"'use client';\n\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Step: () => Step,\n  StepDescription: () => StepDescription,\n  StepIcon: () => StepIcon,\n  StepIndicator: () => StepIndicator,\n  StepIndicatorContent: () => StepIndicatorContent,\n  StepNumber: () => StepNumber,\n  StepSeparator: () => StepSeparator,\n  StepStatus: () => StepStatus,\n  StepTitle: () => StepTitle,\n  Stepper: () => Stepper,\n  useStepContext: () => useStepContext,\n  useStepperStyles: () => useStepperStyles,\n  useSteps: () => useSteps\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/step.tsx\nvar import_shared_utils = require(\"@chakra-ui/shared-utils\");\nvar import_system2 = require(\"@chakra-ui/system\");\n\n// src/step-context.tsx\nvar import_react_context = require(\"@chakra-ui/react-context\");\nvar import_system = require(\"@chakra-ui/system\");\nvar [StepContextProvider, useStepContext] = (0, import_react_context.createContext)({\n  name: \"StepContext\"\n});\nvar [StepperStylesProvider, useStepperStyles] = (0, import_system.createStylesContext)(\"Stepper\");\n\n// src/step.tsx\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar Step = (0, import_system2.forwardRef)(function Step2(props, ref) {\n  const {\n    orientation,\n    status,\n    showLastSeparator\n  } = useStepContext();\n  const styles = useStepperStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system2.chakra.div, {\n    ref,\n    \"data-status\": status,\n    \"data-orientation\": orientation,\n    \"data-stretch\": (0, import_shared_utils.dataAttr)(showLastSeparator),\n    __css: styles.step,\n    ...props,\n    className: (0, import_shared_utils.cx)(\"chakra-step\", props.className)\n  });\n});\n\n// src/step-description.tsx\nvar import_shared_utils2 = require(\"@chakra-ui/shared-utils\");\nvar import_system3 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime2 = require(\"react/jsx-runtime\");\nvar StepDescription = (0, import_system3.forwardRef)(function StepDescription2(props, ref) {\n  const {\n    status\n  } = useStepContext();\n  const styles = useStepperStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_system3.chakra.p, {\n    ref,\n    \"data-status\": status,\n    ...props,\n    className: (0, import_shared_utils2.cx)(\"chakra-step__description\", props.className),\n    __css: styles.description\n  });\n});\n\n// src/step-icon.tsx\nvar import_icon = require(\"@chakra-ui/icon\");\nvar import_shared_utils3 = require(\"@chakra-ui/shared-utils\");\n\n// src/icons.tsx\nvar import_jsx_runtime3 = require(\"react/jsx-runtime\");\nfunction CheckIcon(props) {\n  return /* @__PURE__ */(0, import_jsx_runtime3.jsx)(\"svg\", {\n    stroke: \"currentColor\",\n    fill: \"currentColor\",\n    strokeWidth: \"0\",\n    viewBox: \"0 0 20 20\",\n    \"aria-hidden\": \"true\",\n    height: \"1em\",\n    width: \"1em\",\n    ...props,\n    children: /* @__PURE__ */(0, import_jsx_runtime3.jsx)(\"path\", {\n      fillRule: \"evenodd\",\n      d: \"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\",\n      clipRule: \"evenodd\"\n    })\n  });\n}\n\n// src/step-icon.tsx\nvar import_jsx_runtime4 = require(\"react/jsx-runtime\");\nfunction StepIcon(props) {\n  const {\n    status\n  } = useStepContext();\n  const styles = useStepperStyles();\n  const icon = status === \"complete\" ? CheckIcon : void 0;\n  return /* @__PURE__ */(0, import_jsx_runtime4.jsx)(import_icon.Icon, {\n    as: icon,\n    __css: styles.icon,\n    ...props,\n    className: (0, import_shared_utils3.cx)(\"chakra-step__icon\", props.className)\n  });\n}\n\n// src/step-indicator.tsx\nvar import_shared_utils6 = require(\"@chakra-ui/shared-utils\");\nvar import_system5 = require(\"@chakra-ui/system\");\n\n// src/step-number.tsx\nvar import_shared_utils4 = require(\"@chakra-ui/shared-utils\");\nvar import_system4 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime5 = require(\"react/jsx-runtime\");\nvar StepNumber = (0, import_system4.forwardRef)(function StepNumber2(props, ref) {\n  const {\n    children,\n    ...restProps\n  } = props;\n  const {\n    status,\n    index\n  } = useStepContext();\n  const styles = useStepperStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime5.jsx)(import_system4.chakra.div, {\n    ref,\n    \"data-status\": status,\n    __css: styles.number,\n    ...restProps,\n    className: (0, import_shared_utils4.cx)(\"chakra-step__number\", props.className),\n    children: children || index + 1\n  });\n});\n\n// src/step-status.tsx\nvar import_shared_utils5 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime6 = require(\"react/jsx-runtime\");\nfunction StepStatus(props) {\n  const {\n    complete,\n    incomplete,\n    active\n  } = props;\n  const context = useStepContext();\n  let render = null;\n  switch (context.status) {\n    case \"complete\":\n      render = (0, import_shared_utils5.runIfFn)(complete, context);\n      break;\n    case \"incomplete\":\n      render = (0, import_shared_utils5.runIfFn)(incomplete, context);\n      break;\n    case \"active\":\n      render = (0, import_shared_utils5.runIfFn)(active, context);\n      break;\n  }\n  return render ? /* @__PURE__ */(0, import_jsx_runtime6.jsx)(import_jsx_runtime6.Fragment, {\n    children: render\n  }) : null;\n}\n\n// src/step-indicator.tsx\nvar import_jsx_runtime7 = require(\"react/jsx-runtime\");\nfunction StepIndicator(props) {\n  const {\n    status\n  } = useStepContext();\n  const styles = useStepperStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime7.jsx)(import_system5.chakra.div, {\n    \"data-status\": status,\n    ...props,\n    __css: styles.indicator,\n    className: (0, import_shared_utils6.cx)(\"chakra-step__indicator\", props.className)\n  });\n}\nfunction StepIndicatorContent() {\n  return /* @__PURE__ */(0, import_jsx_runtime7.jsx)(StepStatus, {\n    complete: /* @__PURE__ */(0, import_jsx_runtime7.jsx)(StepIcon, {}),\n    incomplete: /* @__PURE__ */(0, import_jsx_runtime7.jsx)(StepNumber, {}),\n    active: /* @__PURE__ */(0, import_jsx_runtime7.jsx)(StepNumber, {})\n  });\n}\n\n// src/step-separator.tsx\nvar import_shared_utils7 = require(\"@chakra-ui/shared-utils\");\nvar import_system6 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime8 = require(\"react/jsx-runtime\");\nvar StepSeparator = (0, import_system6.forwardRef)(function StepSeparator2(props, ref) {\n  const {\n    orientation,\n    status,\n    isLast,\n    showLastSeparator\n  } = useStepContext();\n  const styles = useStepperStyles();\n  if (isLast && !showLastSeparator) return null;\n  return /* @__PURE__ */(0, import_jsx_runtime8.jsx)(import_system6.chakra.div, {\n    ref,\n    role: \"separator\",\n    \"data-orientation\": orientation,\n    \"data-status\": status,\n    __css: styles.separator,\n    ...props,\n    className: (0, import_shared_utils7.cx)(\"chakra-step__separator\", props.className)\n  });\n});\n\n// src/step-title.tsx\nvar import_shared_utils8 = require(\"@chakra-ui/shared-utils\");\nvar import_system7 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime9 = require(\"react/jsx-runtime\");\nvar StepTitle = (0, import_system7.forwardRef)(function StepTitle2(props, ref) {\n  const {\n    status\n  } = useStepContext();\n  const styles = useStepperStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime9.jsx)(import_system7.chakra.h3, {\n    ref,\n    \"data-status\": status,\n    ...props,\n    __css: styles.title,\n    className: (0, import_shared_utils8.cx)(\"chakra-step__title\", props.className)\n  });\n});\n\n// src/stepper.tsx\nvar import_shared_utils9 = require(\"@chakra-ui/shared-utils\");\nvar import_system8 = require(\"@chakra-ui/system\");\nvar import_react = require(\"react\");\nvar import_jsx_runtime10 = require(\"react/jsx-runtime\");\nvar Stepper = (0, import_system8.forwardRef)(function Stepper2(props, ref) {\n  const styles = (0, import_system8.useMultiStyleConfig)(\"Stepper\", props);\n  const {\n    children,\n    index,\n    orientation = \"horizontal\",\n    showLastSeparator = false,\n    ...restProps\n  } = (0, import_system8.omitThemingProps)(props);\n  const stepElements = import_react.Children.toArray(children);\n  const stepCount = stepElements.length;\n  function getStatus(step) {\n    if (step < index) return \"complete\";\n    if (step > index) return \"incomplete\";\n    return \"active\";\n  }\n  return /* @__PURE__ */(0, import_jsx_runtime10.jsx)(import_system8.chakra.div, {\n    ref,\n    \"aria-label\": \"Progress\",\n    \"data-orientation\": orientation,\n    ...restProps,\n    __css: styles.stepper,\n    className: (0, import_shared_utils9.cx)(\"chakra-stepper\", props.className),\n    children: /* @__PURE__ */(0, import_jsx_runtime10.jsx)(StepperStylesProvider, {\n      value: styles,\n      children: stepElements.map((child, index2) => /* @__PURE__ */(0, import_jsx_runtime10.jsx)(StepContextProvider, {\n        value: {\n          index: index2,\n          status: getStatus(index2),\n          orientation,\n          showLastSeparator,\n          count: stepCount,\n          isFirst: index2 === 0,\n          isLast: index2 === stepCount - 1\n        },\n        children: child\n      }, index2))\n    })\n  });\n});\n\n// src/use-steps.ts\nvar import_react2 = require(\"react\");\nfunction useSteps(props = {}) {\n  const {\n    index = 0,\n    count\n  } = props;\n  const [activeStep, setActiveStep] = (0, import_react2.useState)(index);\n  const maxStep = typeof count === \"number\" ? count - 1 : 0;\n  const activeStepPercent = activeStep / maxStep;\n  return {\n    activeStep,\n    setActiveStep,\n    activeStepPercent,\n    isActiveStep(step) {\n      return step === activeStep;\n    },\n    isCompleteStep(step) {\n      return step < activeStep;\n    },\n    isIncompleteStep(step) {\n      return step > activeStep;\n    },\n    getStatus(step) {\n      if (step < activeStep) return \"complete\";\n      if (step > activeStep) return \"incomplete\";\n      return \"active\";\n    },\n    goToNext() {\n      setActiveStep(step => {\n        return typeof count === \"number\" ? Math.min(count, step + 1) : step + 1;\n      });\n    },\n    goToPrevious() {\n      setActiveStep(step => Math.max(0, step - 1));\n    }\n  };\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Step,\n  StepDescription,\n  StepIcon,\n  StepIndicator,\n  StepIndicatorContent,\n  StepNumber,\n  StepSeparator,\n  StepStatus,\n  StepTitle,\n  Stepper,\n  useStepContext,\n  useStepperStyles,\n  useSteps\n});","map":null,"metadata":{},"sourceType":"script"}