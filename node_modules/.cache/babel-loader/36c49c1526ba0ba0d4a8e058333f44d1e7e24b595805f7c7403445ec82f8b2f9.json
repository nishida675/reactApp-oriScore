{"ast":null,"code":"var _s = $RefreshSig$();\n/* eslint-disable react-hooks/exhaustive-deps */\nimport axios from \"axios\";\nimport { useCallback, useState } from \"react\";\nimport { useMessage } from \"./useMessage\";\nexport const useAllTournament = () => {\n  _s();\n  const {\n    showMessage\n  } = useMessage();\n  const [loading, setLoading] = useState(false);\n  const [tournaments, setTournaments] = useState([]);\n  const getTournaments = useCallback(() => {\n    setLoading(true);\n    axios\n    //.get<Array<tournament>>(\"http://localhost:8080/apiTournament/get\")\n    .get(\"https://nabyss-totomoni.com/apiTournament/get\").then(res => setTournaments(res.data)).catch(() => {\n      showMessage({\n        title: \"大会取得に失敗しました\",\n        status: \"error\"\n      });\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  return {\n    getTournaments,\n    loading,\n    tournaments\n  };\n};\n_s(useAllTournament, \"6BXFV2OiKlSYHp6E3GY7L61lk2M=\", false, function () {\n  return [useMessage];\n});","map":{"version":3,"names":["axios","useCallback","useState","useMessage","useAllTournament","_s","showMessage","loading","setLoading","tournaments","setTournaments","getTournaments","get","then","res","data","catch","title","status","finally"],"sources":["/Users/nishidanaoto/reactApp-oriScore/src/hooks/useAllTournament.ts"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport axios from \"axios\";\nimport { useCallback, useState } from \"react\";\n\nimport { tournament } from \"../types/api/tournament\";\nimport { useMessage } from \"./useMessage\";\n\nexport const useAllTournament = () => {\n  const { showMessage } = useMessage();\n  const [loading, setLoading] = useState(false);\n  const [tournaments, setTournaments] = useState<Array<tournament>>([]);\n\n  const getTournaments = useCallback(() => {\n    setLoading(true);\n    axios\n      //.get<Array<tournament>>(\"http://localhost:8080/apiTournament/get\")\n      .get<Array<tournament>>(\"https://nabyss-totomoni.com/apiTournament/get\")\n      .then((res) => setTournaments(res.data))\n      .catch(() => {\n        showMessage({ title: \"大会取得に失敗しました\", status: \"error\" });\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n  return { getTournaments, loading, tournaments };\n};"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAG7C,SAASC,UAAU,QAAQ,cAAc;AAEzC,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM;IAAEC;EAAY,CAAC,GAAGH,UAAU,CAAC,CAAC;EACpC,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAoB,EAAE,CAAC;EAErE,MAAMS,cAAc,GAAGV,WAAW,CAAC,MAAM;IACvCO,UAAU,CAAC,IAAI,CAAC;IAChBR;IACE;IAAA,CACCY,GAAG,CAAoB,+CAA+C,CAAC,CACvEC,IAAI,CAAEC,GAAG,IAAKJ,cAAc,CAACI,GAAG,CAACC,IAAI,CAAC,CAAC,CACvCC,KAAK,CAAC,MAAM;MACXV,WAAW,CAAC;QAAEW,KAAK,EAAE,aAAa;QAAEC,MAAM,EAAE;MAAQ,CAAC,CAAC;IACxD,CAAC,CAAC,CACDC,OAAO,CAAC,MAAM;MACbX,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN,OAAO;IAAEG,cAAc;IAAEJ,OAAO;IAAEE;EAAY,CAAC;AACjD,CAAC;AAACJ,EAAA,CAnBWD,gBAAgB;EAAA,QACHD,UAAU;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}