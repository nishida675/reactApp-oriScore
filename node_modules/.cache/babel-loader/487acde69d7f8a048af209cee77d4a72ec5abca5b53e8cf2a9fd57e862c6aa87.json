{"ast":null,"code":"var _s = $RefreshSig$();\n/* eslint-disable react-hooks/exhaustive-deps */\nimport axios from \"axios\";\nimport { useCallback, useState } from \"react\";\nimport { useMessage } from \"./useMessage\";\nexport const useAllResult = () => {\n  _s();\n  const {\n    showMessage\n  } = useMessage();\n  const [users1, setUsers1] = useState([]);\n  const [users2, setUsers2] = useState([]);\n  const getResults = useCallback((userId, tournamentId, classes) => {\n    const [className1, className2] = classes;\n    console.log(\"あ\" + className1);\n    axios.get(`http://localhost:8080/apiTournament/getpreResult?tournamentId=${tournamentId}&className1=${className1}&className2=${className2}`).then(res => {\n      console.log(\"API Response:\", res.data);\n      const usersArray1 = res.data[className1] || [];\n      const usersArray2 = res.data[className2] || [];\n      setUsers1(usersArray1);\n      setUsers2(usersArray2);\n    }).catch(() => {\n      showMessage({\n        title: \"参加者取得に失敗しました\",\n        status: \"error\"\n      });\n    });\n  }, []);\n  return {\n    getResults,\n    users1,\n    users2\n  };\n};\n_s(useAllResult, \"lgR0TYXNvpju6XDxZ0m2ChN7qlE=\", false, function () {\n  return [useMessage];\n});","map":{"version":3,"names":["axios","useCallback","useState","useMessage","useAllResult","_s","showMessage","users1","setUsers1","users2","setUsers2","getResults","userId","tournamentId","classes","className1","className2","console","log","get","then","res","data","usersArray1","usersArray2","catch","title","status"],"sources":["/Users/nishidanaoto/ateori-app/src/hooks/useAllResult.ts"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport axios from \"axios\";\nimport { useCallback, useState } from \"react\";\n\nimport { Participant } from \"../types/api/Participant\";\nimport { useMessage } from \"./useMessage\";\n\nexport const useAllResult = () => {\n  const { showMessage } = useMessage();\n  const [users1, setUsers1] = useState<Array<Participant>>([]);\n  const [users2, setUsers2] = useState<Array<Participant>>([]);\n\n  const getResults = useCallback((userId:number, tournamentId: number, classes: string[]) => {\n    const [className1, className2] = classes;\n    console.log(\"あ\"+className1);\n\n    axios\n      .get<{ [key: string]: Participant[] }>(`http://localhost:8080/apiTournament/getpreResult?tournamentId=${tournamentId}&className1=${className1}&className2=${className2}`)\n      .then((res) => {\n        console.log(\"API Response:\", res.data);\n        const usersArray1 = res.data[className1] || [];\n        const usersArray2 = res.data[className2] || [];\n        \n    \n        setUsers1(usersArray1);\n        setUsers2(usersArray2);\n       \n      })\n      .catch(() => {\n        showMessage({ title: \"参加者取得に失敗しました\", status: \"error\" });\n      })\n  }, []);\n  return { getResults, users1, users2 };\n};"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAG7C,SAASC,UAAU,QAAQ,cAAc;AAEzC,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM;IAAEC;EAAY,CAAC,GAAGH,UAAU,CAAC,CAAC;EACpC,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAqB,EAAE,CAAC;EAC5D,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAqB,EAAE,CAAC;EAE5D,MAAMS,UAAU,GAAGV,WAAW,CAAC,CAACW,MAAa,EAAEC,YAAoB,EAAEC,OAAiB,KAAK;IACzF,MAAM,CAACC,UAAU,EAAEC,UAAU,CAAC,GAAGF,OAAO;IACxCG,OAAO,CAACC,GAAG,CAAC,GAAG,GAACH,UAAU,CAAC;IAE3Bf,KAAK,CACFmB,GAAG,CAAoC,iEAAgEN,YAAa,eAAcE,UAAW,eAAcC,UAAW,EAAC,CAAC,CACxKI,IAAI,CAAEC,GAAG,IAAK;MACbJ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEG,GAAG,CAACC,IAAI,CAAC;MACtC,MAAMC,WAAW,GAAGF,GAAG,CAACC,IAAI,CAACP,UAAU,CAAC,IAAI,EAAE;MAC9C,MAAMS,WAAW,GAAGH,GAAG,CAACC,IAAI,CAACN,UAAU,CAAC,IAAI,EAAE;MAG9CR,SAAS,CAACe,WAAW,CAAC;MACtBb,SAAS,CAACc,WAAW,CAAC;IAExB,CAAC,CAAC,CACDC,KAAK,CAAC,MAAM;MACXnB,WAAW,CAAC;QAAEoB,KAAK,EAAE,cAAc;QAAEC,MAAM,EAAE;MAAQ,CAAC,CAAC;IACzD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN,OAAO;IAAEhB,UAAU;IAAEJ,MAAM;IAAEE;EAAO,CAAC;AACvC,CAAC;AAACJ,EAAA,CA1BWD,YAAY;EAAA,QACCD,UAAU;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}