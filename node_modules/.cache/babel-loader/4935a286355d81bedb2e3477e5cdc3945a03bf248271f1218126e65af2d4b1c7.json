{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useMessage } from \"./useMessage\";\nimport { useLoginUser } from \"../hooks/useLoginUser\";\nexport const useAuth = () => {\n  _s();\n  const history = useNavigate();\n  const {\n    showMessage\n  } = useMessage();\n  const {\n    setLoginUser\n  } = useLoginUser();\n  const apiUrl = \"http://localhost:8080/api/authLogin\";\n  const [loading, setLoading] = useState(false);\n  const login = useCallback((name, pass) => {\n    setLoading(true);\n    axios.post(apiUrl, {\n      name: name,\n      pass: pass\n    }).then(res => {\n      if (Array.isArray(res.data) && res.data.length > 0) {\n        var _res$data$, _res$data$2, _res$data$3, _res$data$4;\n        const isAdmin = res.data[0].id === 1 ? true : false;\n        setLoginUser({\n          id: (_res$data$ = res.data[0]) === null || _res$data$ === void 0 ? void 0 : _res$data$.id,\n          name: (_res$data$2 = res.data[0]) === null || _res$data$2 === void 0 ? void 0 : _res$data$2.name,\n          pass: (_res$data$3 = res.data[0]) === null || _res$data$3 === void 0 ? void 0 : _res$data$3.pass,\n          count: (_res$data$4 = res.data[0]) === null || _res$data$4 === void 0 ? void 0 : _res$data$4.count,\n          isAdmin: isAdmin\n        });\n        showMessage({\n          title: \"ログインしました\",\n          status: \"success\"\n        });\n        history(\"/vote\");\n      } else if (!Array.isArray(res.data) && res.data) {\n        // res.data が配列でなく、かつ存在する場合\n        const isAdmin = res.data.id === 1 ? true : false;\n        setLoginUser({\n          id: res.data.id,\n          name: res.data.name,\n          pass: res.data.pass,\n          count: res.data.count,\n          isAdmin: isAdmin\n        });\n        showMessage({\n          title: \"ログインしました\",\n          status: \"success\"\n        });\n        history(\"/vote\");\n      } else {\n        showMessage({\n          title: \"ユーザーが見つかりません\",\n          status: \"error\"\n        });\n        setLoading(false);\n      }\n    }).catch(() => {\n      showMessage({\n        title: \"ログインできません\",\n        status: \"error\"\n      });\n      setLoading(false);\n    });\n  }, [history, showMessage, setLoginUser]);\n  return {\n    login,\n    loading\n  };\n};\n_s(useAuth, \"iftbK+eEsCeZcXXyBedgpHWrfCg=\", false, function () {\n  return [useNavigate, useMessage, useLoginUser];\n});","map":{"version":3,"names":["useCallback","useState","axios","useNavigate","useMessage","useLoginUser","useAuth","_s","history","showMessage","setLoginUser","apiUrl","loading","setLoading","login","name","pass","post","then","res","Array","isArray","data","length","_res$data$","_res$data$2","_res$data$3","_res$data$4","isAdmin","id","count","title","status","catch"],"sources":["/Users/nishidanaoto/ateori-app/src/hooks/useAuth.ts"],"sourcesContent":["import { useCallback, useState } from \"react\";\nimport axios from \"axios\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { User } from \"../types/api/user\";\nimport { useMessage } from \"./useMessage\";\nimport { useLoginUser } from \"../hooks/useLoginUser\";\n\n\nexport const useAuth = () => {\n  const history = useNavigate();\n  const { showMessage } = useMessage();\n  const { setLoginUser } = useLoginUser();\n  const apiUrl = \"http://localhost:8080/api/authLogin\";\n\n  const [loading, setLoading] = useState(false);\n  const login = useCallback(\n    (name: string, pass: string) => {\n      setLoading(true);\n      axios\n        .post<User | User[]>(apiUrl, {\n          name: name,\n          pass: pass\n        })\n        .then((res) => {\n          if (Array.isArray(res.data) && res.data.length > 0) {\n            const isAdmin = res.data[0].id === 1 ? true : false;\n            setLoginUser({\n              id: res.data[0]?.id,\n              name: res.data[0]?.name,\n              pass: res.data[0]?.pass,\n              count: res.data[0]?.count,\n              isAdmin: isAdmin\n            });\n            showMessage({ title: \"ログインしました\", status: \"success\" });\n            history(\"/vote\");\n          } else if (!Array.isArray(res.data) && res.data) {\n            // res.data が配列でなく、かつ存在する場合\n            const isAdmin = res.data.id === 1 ? true : false;\n            setLoginUser({\n              id: res.data.id,\n              name: res.data.name,\n              pass: res.data.pass,\n              count: res.data.count,\n              isAdmin: isAdmin\n            });\n            showMessage({ title: \"ログインしました\", status: \"success\" });\n            history(\"/vote\");\n          } else {\n            showMessage({ title: \"ユーザーが見つかりません\", status: \"error\" });\n            setLoading(false);\n          }\n        })\n        .catch(() => {\n          showMessage({ title: \"ログインできません\", status: \"error\" });\n          setLoading(false);\n        });\n    },\n    [history, showMessage, setLoginUser]\n  );\n  return { login, loading };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}