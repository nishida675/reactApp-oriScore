{"ast":null,"code":"var _jsxFileName = \"/Users/nishidanaoto/ateori-app/src/components/pages/VotePage.tsx\";\nimport { memo, useContext, useEffect, useRef } from \"react\";\nimport { PrimaryButton } from \"../atoms/button/PrimaryButton\";\nimport { useNavigate } from 'react-router-dom';\nimport { LoginUserContext } from '../../providers/LoginUserProvider';\nexport const VotePage = memo(() => {\n  console.log(\"VotePage rendered\");\n  const navigate = useNavigate();\n  const {\n    loginUser,\n    setLoginUser\n  } = useContext(LoginUserContext);\n  const timerId = useRef(null);\n  const VoteMove = () => {\n    navigate('/vote');\n  };\n  const RankingMove = () => {\n    navigate('/ranking');\n  };\n\n  // 自動ログアウトの時間（ミリ秒）\n  const autoLogoutTime = 600000; // 10分\n  //const autoLogoutTime = 10000; // 10秒\n\n  useEffect(() => {\n    const resetTimer = () => {\n      // タイマーをリセット\n      if (timerId.current) {\n        clearTimeout(timerId.current);\n      }\n\n      // 新たなタイマーをセット\n      timerId.current = setTimeout(() => {\n        // ログアウト処理（例: setLoginUser(null)）\n        setLoginUser(null);\n\n        // トップページにリダイレクト\n        navigate('/');\n      }, autoLogoutTime);\n    };\n\n    // ユーザーがアクションを起こすたびにタイマーをリセット\n    const resetTimerOnAction = () => {\n      resetTimer();\n    };\n\n    // 初回実行時にタイマーをセット\n    resetTimer();\n\n    // ユーザーのアクション（例: クリック）があった場合にタイマーをリセット\n    document.addEventListener('click', resetTimerOnAction);\n    return () => {\n      // コンポーネントがアンマウントされたときにクリア\n      if (timerId.current) {\n        clearTimeout(timerId.current);\n      }\n      document.removeEventListener('click', resetTimerOnAction);\n    };\n  }, [setLoginUser, navigate, timerId]);\n\n  // loginUserが存在するかどうかのチェック\n  useEffect(() => {\n    // loginUserが存在しない場合、トップページに遷移\n    if (!loginUser) {\n      navigate('/');\n    }\n  }, [loginUser, navigate]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"\\u6295\\u7968\"), /*#__PURE__*/React.createElement(PrimaryButton, {\n    onClick: VoteMove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"\\u6295\\u7968\"), /*#__PURE__*/React.createElement(PrimaryButton, {\n    onClick: RankingMove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"\\u30E9\\u30F3\\u30AD\\u30F3\\u30B0\"));\n});","map":{"version":3,"names":["memo","useContext","useEffect","useRef","PrimaryButton","useNavigate","LoginUserContext","VotePage","console","log","navigate","loginUser","setLoginUser","timerId","VoteMove","RankingMove","autoLogoutTime","resetTimer","current","clearTimeout","setTimeout","resetTimerOnAction","document","addEventListener","removeEventListener","React","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["/Users/nishidanaoto/ateori-app/src/components/pages/VotePage.tsx"],"sourcesContent":["import { memo, useContext, useEffect, useRef } from \"react\";\nimport { PrimaryButton } from \"../atoms/button/PrimaryButton\";\nimport { useNavigate } from 'react-router-dom';\n\nimport { LoginUserContext } from '../../providers/LoginUserProvider';\n\nexport const VotePage = memo(() => {\n  console.log(\"VotePage rendered\");\n\n  const navigate = useNavigate();\n  const { loginUser, setLoginUser } = useContext(LoginUserContext);\n  const timerId = useRef<NodeJS.Timeout | null>(null);\n\n  const VoteMove = () => {\n    navigate('/vote');\n  }\n  const RankingMove = () => {\n    navigate('/ranking');\n  }\n\n  // 自動ログアウトの時間（ミリ秒）\n  const autoLogoutTime = 600000; // 10分\n  //const autoLogoutTime = 10000; // 10秒\n\n  useEffect(() => {\n    const resetTimer = () => {\n      // タイマーをリセット\n      if (timerId.current) {\n        clearTimeout(timerId.current);\n      }\n\n      // 新たなタイマーをセット\n      timerId.current = setTimeout(() => {\n        // ログアウト処理（例: setLoginUser(null)）\n        setLoginUser(null);\n\n        // トップページにリダイレクト\n        navigate('/');\n      }, autoLogoutTime);\n    };\n\n    // ユーザーがアクションを起こすたびにタイマーをリセット\n    const resetTimerOnAction = () => {\n      resetTimer();\n    };\n\n    // 初回実行時にタイマーをセット\n    resetTimer();\n\n    // ユーザーのアクション（例: クリック）があった場合にタイマーをリセット\n    document.addEventListener('click', resetTimerOnAction);\n\n    return () => {\n      // コンポーネントがアンマウントされたときにクリア\n      if (timerId.current) {\n        clearTimeout(timerId.current);\n      }\n      document.removeEventListener('click', resetTimerOnAction);\n    };\n  }, [setLoginUser, navigate, timerId]);\n\n  // loginUserが存在するかどうかのチェック\n  useEffect(() => {\n    // loginUserが存在しない場合、トップページに遷移\n    if (!loginUser) {\n      navigate('/');\n    }\n  }, [loginUser, navigate]);\n  return (\n    <>\n      <p>投票</p>\n      <PrimaryButton onClick={VoteMove}>投票</PrimaryButton>\n      <PrimaryButton onClick={RankingMove}>ランキング</PrimaryButton>\n    </>\n  );\n});\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,UAAU,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC3D,SAASC,aAAa,QAAQ,+BAA+B;AAC7D,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,SAASC,gBAAgB,QAAQ,mCAAmC;AAEpE,OAAO,MAAMC,QAAQ,GAAGP,IAAI,CAAC,MAAM;EACjCQ,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAEhC,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEM,SAAS;IAAEC;EAAa,CAAC,GAAGX,UAAU,CAACK,gBAAgB,CAAC;EAChE,MAAMO,OAAO,GAAGV,MAAM,CAAwB,IAAI,CAAC;EAEnD,MAAMW,QAAQ,GAAGA,CAAA,KAAM;IACrBJ,QAAQ,CAAC,OAAO,CAAC;EACnB,CAAC;EACD,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxBL,QAAQ,CAAC,UAAU,CAAC;EACtB,CAAC;;EAED;EACA,MAAMM,cAAc,GAAG,MAAM,CAAC,CAAC;EAC/B;;EAEAd,SAAS,CAAC,MAAM;IACd,MAAMe,UAAU,GAAGA,CAAA,KAAM;MACvB;MACA,IAAIJ,OAAO,CAACK,OAAO,EAAE;QACnBC,YAAY,CAACN,OAAO,CAACK,OAAO,CAAC;MAC/B;;MAEA;MACAL,OAAO,CAACK,OAAO,GAAGE,UAAU,CAAC,MAAM;QACjC;QACAR,YAAY,CAAC,IAAI,CAAC;;QAElB;QACAF,QAAQ,CAAC,GAAG,CAAC;MACf,CAAC,EAAEM,cAAc,CAAC;IACpB,CAAC;;IAED;IACA,MAAMK,kBAAkB,GAAGA,CAAA,KAAM;MAC/BJ,UAAU,CAAC,CAAC;IACd,CAAC;;IAED;IACAA,UAAU,CAAC,CAAC;;IAEZ;IACAK,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAEF,kBAAkB,CAAC;IAEtD,OAAO,MAAM;MACX;MACA,IAAIR,OAAO,CAACK,OAAO,EAAE;QACnBC,YAAY,CAACN,OAAO,CAACK,OAAO,CAAC;MAC/B;MACAI,QAAQ,CAACE,mBAAmB,CAAC,OAAO,EAAEH,kBAAkB,CAAC;IAC3D,CAAC;EACH,CAAC,EAAE,CAACT,YAAY,EAAEF,QAAQ,EAAEG,OAAO,CAAC,CAAC;;EAErC;EACAX,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACS,SAAS,EAAE;MACdD,QAAQ,CAAC,GAAG,CAAC;IACf;EACF,CAAC,EAAE,CAACC,SAAS,EAAED,QAAQ,CAAC,CAAC;EACzB,oBACEe,KAAA,CAAAC,aAAA,CAAAD,KAAA,CAAAE,QAAA,qBACEF,KAAA,CAAAC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,cAAK,CAAC,eACTR,KAAA,CAAAC,aAAA,CAACtB,aAAa;IAAC8B,OAAO,EAAEpB,QAAS;IAAAc,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,cAAiB,CAAC,eACpDR,KAAA,CAAAC,aAAA,CAACtB,aAAa;IAAC8B,OAAO,EAAEnB,WAAY;IAAAa,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,gCAAoB,CACzD,CAAC;AAEP,CAAC,CAAC"},"metadata":{},"sourceType":"module"}