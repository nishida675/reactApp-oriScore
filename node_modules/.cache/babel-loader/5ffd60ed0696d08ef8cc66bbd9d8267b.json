{"ast":null,"code":"'use client';\n\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Alert: () => Alert,\n  AlertDescription: () => AlertDescription,\n  AlertIcon: () => AlertIcon,\n  AlertTitle: () => AlertTitle,\n  useAlertStyles: () => useAlertStyles\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/alert.tsx\nvar import_shared_utils = require(\"@chakra-ui/shared-utils\");\nvar import_system = require(\"@chakra-ui/system\");\n\n// src/alert-context.ts\nvar import_react_context = require(\"@chakra-ui/react-context\");\n\n// src/icons.tsx\nvar import_icon = require(\"@chakra-ui/icon\");\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nfunction CheckIcon(props) {\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_icon.Icon, {\n    viewBox: \"0 0 24 24\",\n    ...props,\n    children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"path\", {\n      fill: \"currentColor\",\n      d: \"M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z\"\n    })\n  });\n}\nfunction InfoIcon(props) {\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_icon.Icon, {\n    viewBox: \"0 0 24 24\",\n    ...props,\n    children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"path\", {\n      fill: \"currentColor\",\n      d: \"M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z\"\n    })\n  });\n}\nfunction WarningIcon(props) {\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_icon.Icon, {\n    viewBox: \"0 0 24 24\",\n    ...props,\n    children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"path\", {\n      fill: \"currentColor\",\n      d: \"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z\"\n    })\n  });\n}\n\n// src/alert-context.ts\nvar import_spinner = require(\"@chakra-ui/spinner\");\nvar [AlertProvider, useAlertContext] = (0, import_react_context.createContext)({\n  name: \"AlertContext\",\n  hookName: \"useAlertContext\",\n  providerName: \"<Alert />\"\n});\nvar [AlertStylesProvider, useAlertStyles] = (0, import_react_context.createContext)({\n  name: `AlertStylesContext`,\n  hookName: `useAlertStyles`,\n  providerName: \"<Alert />\"\n});\nvar STATUSES = {\n  info: {\n    icon: InfoIcon,\n    colorScheme: \"blue\"\n  },\n  warning: {\n    icon: WarningIcon,\n    colorScheme: \"orange\"\n  },\n  success: {\n    icon: CheckIcon,\n    colorScheme: \"green\"\n  },\n  error: {\n    icon: WarningIcon,\n    colorScheme: \"red\"\n  },\n  loading: {\n    icon: import_spinner.Spinner,\n    colorScheme: \"blue\"\n  }\n};\nfunction getStatusColorScheme(status) {\n  return STATUSES[status].colorScheme;\n}\nfunction getStatusIcon(status) {\n  return STATUSES[status].icon;\n}\n\n// src/alert.tsx\nvar import_jsx_runtime2 = require(\"react/jsx-runtime\");\nvar Alert = (0, import_system.forwardRef)(function Alert2(props, ref) {\n  var _a;\n  const {\n    status = \"info\",\n    addRole = true,\n    ...rest\n  } = (0, import_system.omitThemingProps)(props);\n  const colorScheme = (_a = props.colorScheme) != null ? _a : getStatusColorScheme(status);\n  const styles = (0, import_system.useMultiStyleConfig)(\"Alert\", {\n    ...props,\n    colorScheme\n  });\n  const alertStyles = {\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    position: \"relative\",\n    overflow: \"hidden\",\n    ...styles.container\n  };\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(AlertProvider, {\n    value: {\n      status\n    },\n    children: /* @__PURE__ */(0, import_jsx_runtime2.jsx)(AlertStylesProvider, {\n      value: styles,\n      children: /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_system.chakra.div, {\n        \"data-status\": status,\n        role: addRole ? \"alert\" : void 0,\n        ref,\n        ...rest,\n        className: (0, import_shared_utils.cx)(\"chakra-alert\", props.className),\n        __css: alertStyles\n      })\n    })\n  });\n});\nAlert.displayName = \"Alert\";\n\n// src/alert-description.tsx\nvar import_shared_utils2 = require(\"@chakra-ui/shared-utils\");\nvar import_system2 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime3 = require(\"react/jsx-runtime\");\nvar AlertDescription = (0, import_system2.forwardRef)(function AlertDescription2(props, ref) {\n  const styles = useAlertStyles();\n  const {\n    status\n  } = useAlertContext();\n  const descriptionStyles = {\n    display: \"inline\",\n    ...styles.description\n  };\n  return /* @__PURE__ */(0, import_jsx_runtime3.jsx)(import_system2.chakra.div, {\n    ref,\n    \"data-status\": status,\n    ...props,\n    className: (0, import_shared_utils2.cx)(\"chakra-alert__desc\", props.className),\n    __css: descriptionStyles\n  });\n});\nAlertDescription.displayName = \"AlertDescription\";\n\n// src/alert-icon.tsx\nvar import_shared_utils3 = require(\"@chakra-ui/shared-utils\");\nvar import_system3 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime4 = require(\"react/jsx-runtime\");\nfunction AlertIcon(props) {\n  const {\n    status\n  } = useAlertContext();\n  const BaseIcon = getStatusIcon(status);\n  const styles = useAlertStyles();\n  const css = status === \"loading\" ? styles.spinner : styles.icon;\n  return /* @__PURE__ */(0, import_jsx_runtime4.jsx)(import_system3.chakra.span, {\n    display: \"inherit\",\n    \"data-status\": status,\n    ...props,\n    className: (0, import_shared_utils3.cx)(\"chakra-alert__icon\", props.className),\n    __css: css,\n    children: props.children || /* @__PURE__ */(0, import_jsx_runtime4.jsx)(BaseIcon, {\n      h: \"100%\",\n      w: \"100%\"\n    })\n  });\n}\nAlertIcon.displayName = \"AlertIcon\";\n\n// src/alert-title.tsx\nvar import_shared_utils4 = require(\"@chakra-ui/shared-utils\");\nvar import_system4 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime5 = require(\"react/jsx-runtime\");\nvar AlertTitle = (0, import_system4.forwardRef)(function AlertTitle2(props, ref) {\n  const styles = useAlertStyles();\n  const {\n    status\n  } = useAlertContext();\n  return /* @__PURE__ */(0, import_jsx_runtime5.jsx)(import_system4.chakra.div, {\n    ref,\n    \"data-status\": status,\n    ...props,\n    className: (0, import_shared_utils4.cx)(\"chakra-alert__title\", props.className),\n    __css: styles.title\n  });\n});\nAlertTitle.displayName = \"AlertTitle\";\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n  useAlertStyles\n});","map":null,"metadata":{},"sourceType":"script"}