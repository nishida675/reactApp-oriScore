{"ast":null,"code":"var _s = $RefreshSig$();\n/* eslint-disable react-hooks/exhaustive-deps */\nimport axios from \"axios\";\nimport { useCallback, useState } from \"react\";\nimport { useMessage } from \"./useMessage\";\nexport const useAllParticipant = () => {\n  _s();\n  const {\n    showMessage\n  } = useMessage();\n  const [loading2, setLoading2] = useState(false);\n  const [users, setUsers] = useState([]);\n  const getUsers = useCallback((tournamentId, classes) => {\n    setLoading2(true);\n    const [className1, className2] = classes;\n    axios.get(`http://localhost:8080/apiTournament/getParticipant?tournamentId=${tournamentId}&className1=${encodeURIComponent(className1)}&className2=${encodeURIComponent(className2)}`).then(res => {\n      const usersArray1 = res.data[className1] || [];\n      const usersArray2 = res.data[className2] || [];\n      const combinedUsersArray = [...usersArray1, ...usersArray2];\n      setUsers(combinedUsersArray);\n    }).catch(() => {\n      showMessage({\n        title: \"参加者取得に失敗しました\",\n        status: \"error\"\n      });\n    }).finally(() => {\n      setLoading2(false);\n    });\n  }, []);\n  return {\n    getUsers,\n    loading2,\n    users\n  };\n};\n_s(useAllParticipant, \"6JVYIaTnJ/gG9CGtceIMg685dto=\", false, function () {\n  return [useMessage];\n});","map":{"version":3,"names":["axios","useCallback","useState","useMessage","useAllParticipant","_s","showMessage","loading2","setLoading2","users","setUsers","getUsers","tournamentId","classes","className1","className2","get","encodeURIComponent","then","res","usersArray1","data","usersArray2","combinedUsersArray","catch","title","status","finally"],"sources":["/Users/nishidanaoto/ateori-app/src/hooks/useAllParticipant.ts"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport axios from \"axios\";\nimport { useCallback, useState } from \"react\";\n\nimport { Participant } from \"../types/api/Participant\";\nimport { useMessage } from \"./useMessage\";\n\nexport const useAllParticipant = () => {\n  const { showMessage } = useMessage();\n  const [loading2, setLoading2] = useState(false);\n  const [users, setUsers] = useState<Array<Participant>>([]);\n\n  const getUsers = useCallback((tournamentId: number, classes: string[]) => {\n    setLoading2(true);\n    const [className1, className2] = classes;\n\n    axios\n      .get<{ [key: string]: Participant[] }>(`http://localhost:8080/apiTournament/getParticipant?tournamentId=${tournamentId}&className1=${encodeURIComponent(className1)}&className2=${encodeURIComponent(className2)}`) \n      .then((res) => {\n        const usersArray1 = res.data[className1] || [];\n        const usersArray2 = res.data[className2] || [];\n\n        const combinedUsersArray = [...usersArray1, ...usersArray2];\n\n        setUsers(combinedUsersArray);\n      })\n      .catch(() => {\n        showMessage({ title: \"参加者取得に失敗しました\", status: \"error\" });\n      })\n      .finally(() => {\n        setLoading2(false);\n      });\n  }, []);\n  return { getUsers, loading2, users };\n};"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAG7C,SAASC,UAAU,QAAQ,cAAc;AAEzC,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM;IAAEC;EAAY,CAAC,GAAGH,UAAU,CAAC,CAAC;EACpC,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAqB,EAAE,CAAC;EAE1D,MAAMS,QAAQ,GAAGV,WAAW,CAAC,CAACW,YAAoB,EAAEC,OAAiB,KAAK;IACxEL,WAAW,CAAC,IAAI,CAAC;IACjB,MAAM,CAACM,UAAU,EAAEC,UAAU,CAAC,GAAGF,OAAO;IAExCb,KAAK,CACFgB,GAAG,CAAoC,mEAAkEJ,YAAa,eAAcK,kBAAkB,CAACH,UAAU,CAAE,eAAcG,kBAAkB,CAACF,UAAU,CAAE,EAAC,CAAC,CAClNG,IAAI,CAAEC,GAAG,IAAK;MACb,MAAMC,WAAW,GAAGD,GAAG,CAACE,IAAI,CAACP,UAAU,CAAC,IAAI,EAAE;MAC9C,MAAMQ,WAAW,GAAGH,GAAG,CAACE,IAAI,CAACN,UAAU,CAAC,IAAI,EAAE;MAE9C,MAAMQ,kBAAkB,GAAG,CAAC,GAAGH,WAAW,EAAE,GAAGE,WAAW,CAAC;MAE3DZ,QAAQ,CAACa,kBAAkB,CAAC;IAC9B,CAAC,CAAC,CACDC,KAAK,CAAC,MAAM;MACXlB,WAAW,CAAC;QAAEmB,KAAK,EAAE,cAAc;QAAEC,MAAM,EAAE;MAAQ,CAAC,CAAC;IACzD,CAAC,CAAC,CACDC,OAAO,CAAC,MAAM;MACbnB,WAAW,CAAC,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN,OAAO;IAAEG,QAAQ;IAAEJ,QAAQ;IAAEE;EAAM,CAAC;AACtC,CAAC;AAACJ,EAAA,CA3BWD,iBAAiB;EAAA,QACJD,UAAU;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}