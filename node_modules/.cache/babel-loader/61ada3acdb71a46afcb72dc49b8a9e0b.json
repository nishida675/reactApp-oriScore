{"ast":null,"code":"'use client';\n\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  AbsoluteCenter: () => AbsoluteCenter,\n  AspectRatio: () => AspectRatio,\n  Badge: () => Badge,\n  Box: () => Box,\n  Center: () => Center,\n  Circle: () => Circle,\n  Code: () => Code,\n  Container: () => Container,\n  Divider: () => Divider,\n  Flex: () => Flex,\n  Grid: () => Grid,\n  GridItem: () => GridItem,\n  HStack: () => HStack,\n  Heading: () => Heading,\n  Highlight: () => Highlight,\n  Indicator: () => Indicator,\n  Kbd: () => Kbd,\n  Link: () => Link,\n  LinkBox: () => LinkBox,\n  LinkOverlay: () => LinkOverlay,\n  List: () => List,\n  ListIcon: () => ListIcon,\n  ListItem: () => ListItem,\n  Mark: () => Mark,\n  OrderedList: () => OrderedList,\n  SimpleGrid: () => SimpleGrid,\n  Spacer: () => Spacer,\n  Square: () => Square,\n  Stack: () => Stack,\n  StackDivider: () => StackDivider,\n  StackItem: () => StackItem,\n  Text: () => Text,\n  UnorderedList: () => UnorderedList,\n  VStack: () => VStack,\n  Wrap: () => Wrap,\n  WrapItem: () => WrapItem,\n  useHighlight: () => useHighlight,\n  useListStyles: () => useListStyles\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/aspect-ratio.tsx\nvar import_system = require(\"@chakra-ui/system\");\nvar import_breakpoint_utils = require(\"@chakra-ui/breakpoint-utils\");\nvar import_shared_utils = require(\"@chakra-ui/shared-utils\");\nvar import_react = require(\"react\");\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar AspectRatio = (0, import_system.forwardRef)(function (props, ref) {\n  const {\n    ratio = 4 / 3,\n    children,\n    className,\n    ...rest\n  } = props;\n  const child = import_react.Children.only(children);\n  const _className = (0, import_shared_utils.cx)(\"chakra-aspect-ratio\", className);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.div, {\n    ref,\n    position: \"relative\",\n    className: _className,\n    _before: {\n      height: 0,\n      content: `\"\"`,\n      display: \"block\",\n      paddingBottom: (0, import_breakpoint_utils.mapResponsive)(ratio, r => `${1 / r * 100}%`)\n    },\n    __css: {\n      \"& > *:not(style)\": {\n        overflow: \"hidden\",\n        position: \"absolute\",\n        top: \"0\",\n        right: \"0\",\n        bottom: \"0\",\n        left: \"0\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\"\n      },\n      \"& > img, & > video\": {\n        objectFit: \"cover\"\n      }\n    },\n    ...rest,\n    children: child\n  });\n});\nAspectRatio.displayName = \"AspectRatio\";\n\n// src/badge.tsx\nvar import_system2 = require(\"@chakra-ui/system\");\nvar import_shared_utils2 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime2 = require(\"react/jsx-runtime\");\nvar Badge = (0, import_system2.forwardRef)(function Badge2(props, ref) {\n  const styles = (0, import_system2.useStyleConfig)(\"Badge\", props);\n  const {\n    className,\n    ...rest\n  } = (0, import_system2.omitThemingProps)(props);\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_system2.chakra.span, {\n    ref,\n    className: (0, import_shared_utils2.cx)(\"chakra-badge\", props.className),\n    ...rest,\n    __css: {\n      display: \"inline-block\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      ...styles\n    }\n  });\n});\nBadge.displayName = \"Badge\";\n\n// src/box.tsx\nvar import_system3 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime3 = require(\"react/jsx-runtime\");\nvar Box = (0, import_system3.chakra)(\"div\");\nBox.displayName = \"Box\";\nvar Square = (0, import_system3.forwardRef)(function Square2(props, ref) {\n  const {\n    size,\n    centerContent = true,\n    ...rest\n  } = props;\n  const styles = centerContent ? {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  } : {};\n  return /* @__PURE__ */(0, import_jsx_runtime3.jsx)(Box, {\n    ref,\n    boxSize: size,\n    __css: {\n      ...styles,\n      flexShrink: 0,\n      flexGrow: 0\n    },\n    ...rest\n  });\n});\nSquare.displayName = \"Square\";\nvar Circle = (0, import_system3.forwardRef)(function Circle2(props, ref) {\n  const {\n    size,\n    ...rest\n  } = props;\n  return /* @__PURE__ */(0, import_jsx_runtime3.jsx)(Square, {\n    size,\n    ref,\n    borderRadius: \"9999px\",\n    ...rest\n  });\n});\nCircle.displayName = \"Circle\";\n\n// src/center.tsx\nvar import_system4 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime4 = require(\"react/jsx-runtime\");\nvar Center = (0, import_system4.chakra)(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nCenter.displayName = \"Center\";\nvar centerStyles = {\n  horizontal: {\n    insetStart: \"50%\",\n    transform: \"translateX(-50%)\"\n  },\n  vertical: {\n    top: \"50%\",\n    transform: \"translateY(-50%)\"\n  },\n  both: {\n    insetStart: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\nvar AbsoluteCenter = (0, import_system4.forwardRef)(function AbsoluteCenter2(props, ref) {\n  const {\n    axis = \"both\",\n    ...rest\n  } = props;\n  return /* @__PURE__ */(0, import_jsx_runtime4.jsx)(import_system4.chakra.div, {\n    ref,\n    __css: centerStyles[axis],\n    ...rest,\n    position: \"absolute\"\n  });\n});\n\n// src/code.tsx\nvar import_system5 = require(\"@chakra-ui/system\");\nvar import_shared_utils3 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime5 = require(\"react/jsx-runtime\");\nvar Code = (0, import_system5.forwardRef)(function Code2(props, ref) {\n  const styles = (0, import_system5.useStyleConfig)(\"Code\", props);\n  const {\n    className,\n    ...rest\n  } = (0, import_system5.omitThemingProps)(props);\n  return /* @__PURE__ */(0, import_jsx_runtime5.jsx)(import_system5.chakra.code, {\n    ref,\n    className: (0, import_shared_utils3.cx)(\"chakra-code\", props.className),\n    ...rest,\n    __css: {\n      display: \"inline-block\",\n      ...styles\n    }\n  });\n});\nCode.displayName = \"Code\";\n\n// src/container.tsx\nvar import_system6 = require(\"@chakra-ui/system\");\nvar import_shared_utils4 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime6 = require(\"react/jsx-runtime\");\nvar Container = (0, import_system6.forwardRef)(function Container2(props, ref) {\n  const {\n    className,\n    centerContent,\n    ...rest\n  } = (0, import_system6.omitThemingProps)(props);\n  const styles = (0, import_system6.useStyleConfig)(\"Container\", props);\n  return /* @__PURE__ */(0, import_jsx_runtime6.jsx)(import_system6.chakra.div, {\n    ref,\n    className: (0, import_shared_utils4.cx)(\"chakra-container\", className),\n    ...rest,\n    __css: {\n      ...styles,\n      ...(centerContent && {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      })\n    }\n  });\n});\nContainer.displayName = \"Container\";\n\n// src/divider.tsx\nvar import_system7 = require(\"@chakra-ui/system\");\nvar import_shared_utils5 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime7 = require(\"react/jsx-runtime\");\nvar Divider = (0, import_system7.forwardRef)(function Divider2(props, ref) {\n  const {\n    borderLeftWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    borderRightWidth,\n    borderWidth,\n    borderStyle,\n    borderColor,\n    ...styles\n  } = (0, import_system7.useStyleConfig)(\"Divider\", props);\n  const {\n    className,\n    orientation = \"horizontal\",\n    __css,\n    ...rest\n  } = (0, import_system7.omitThemingProps)(props);\n  const dividerStyles = {\n    vertical: {\n      borderLeftWidth: borderLeftWidth || borderRightWidth || borderWidth || \"1px\",\n      height: \"100%\"\n    },\n    horizontal: {\n      borderBottomWidth: borderBottomWidth || borderTopWidth || borderWidth || \"1px\",\n      width: \"100%\"\n    }\n  };\n  return /* @__PURE__ */(0, import_jsx_runtime7.jsx)(import_system7.chakra.hr, {\n    ref,\n    \"aria-orientation\": orientation,\n    ...rest,\n    __css: {\n      ...styles,\n      border: \"0\",\n      borderColor,\n      borderStyle,\n      ...dividerStyles[orientation],\n      ...__css\n    },\n    className: (0, import_shared_utils5.cx)(\"chakra-divider\", className)\n  });\n});\nDivider.displayName = \"Divider\";\n\n// src/flex.tsx\nvar import_system8 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime8 = require(\"react/jsx-runtime\");\nvar Flex = (0, import_system8.forwardRef)(function Flex2(props, ref) {\n  const {\n    direction,\n    align,\n    justify,\n    wrap,\n    basis,\n    grow,\n    shrink,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink\n  };\n  return /* @__PURE__ */(0, import_jsx_runtime8.jsx)(import_system8.chakra.div, {\n    ref,\n    __css: styles,\n    ...rest\n  });\n});\nFlex.displayName = \"Flex\";\n\n// src/grid.tsx\nvar import_system9 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime9 = require(\"react/jsx-runtime\");\nvar Grid = (0, import_system9.forwardRef)(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */(0, import_jsx_runtime9.jsx)(import_system9.chakra.div, {\n    ref,\n    __css: styles,\n    ...rest\n  });\n});\nGrid.displayName = \"Grid\";\n\n// src/grid-item.tsx\nvar import_system10 = require(\"@chakra-ui/system\");\nvar import_object_utils = require(\"@chakra-ui/object-utils\");\nvar import_breakpoint_utils2 = require(\"@chakra-ui/breakpoint-utils\");\nvar import_jsx_runtime10 = require(\"react/jsx-runtime\");\nfunction spanFn(span) {\n  return (0, import_breakpoint_utils2.mapResponsive)(span, value => value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`);\n}\nvar GridItem = (0, import_system10.forwardRef)(function GridItem2(props, ref) {\n  const {\n    area,\n    colSpan,\n    colStart,\n    colEnd,\n    rowEnd,\n    rowSpan,\n    rowStart,\n    ...rest\n  } = props;\n  const styles = (0, import_object_utils.compact)({\n    gridArea: area,\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd\n  });\n  return /* @__PURE__ */(0, import_jsx_runtime10.jsx)(import_system10.chakra.div, {\n    ref,\n    __css: styles,\n    ...rest\n  });\n});\nGridItem.displayName = \"GridItem\";\n\n// src/heading.tsx\nvar import_system11 = require(\"@chakra-ui/system\");\nvar import_shared_utils6 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime11 = require(\"react/jsx-runtime\");\nvar Heading = (0, import_system11.forwardRef)(function Heading2(props, ref) {\n  const styles = (0, import_system11.useStyleConfig)(\"Heading\", props);\n  const {\n    className,\n    ...rest\n  } = (0, import_system11.omitThemingProps)(props);\n  return /* @__PURE__ */(0, import_jsx_runtime11.jsx)(import_system11.chakra.h2, {\n    ref,\n    className: (0, import_shared_utils6.cx)(\"chakra-heading\", props.className),\n    ...rest,\n    __css: styles\n  });\n});\nHeading.displayName = \"Heading\";\n\n// src/highlight.tsx\nvar import_system12 = require(\"@chakra-ui/system\");\nvar import_react2 = require(\"react\");\nvar import_jsx_runtime12 = require(\"react/jsx-runtime\");\nvar escapeRegexp = term => term.replace(/[|\\\\{}()[\\]^$+*?.-]/g, char => `\\\\${char}`);\nfunction buildRegex(query) {\n  const _query = query.filter(text => text.length !== 0).map(text => escapeRegexp(text.trim()));\n  if (!_query.length) {\n    return null;\n  }\n  return new RegExp(`(${_query.join(\"|\")})`, \"ig\");\n}\nfunction highlightWords({\n  text,\n  query\n}) {\n  const regex = buildRegex(Array.isArray(query) ? query : [query]);\n  if (!regex) {\n    return [{\n      text,\n      match: false\n    }];\n  }\n  const result = text.split(regex).filter(Boolean);\n  return result.map(str => ({\n    text: str,\n    match: regex.test(str)\n  }));\n}\nfunction useHighlight(props) {\n  const {\n    text,\n    query\n  } = props;\n  return (0, import_react2.useMemo)(() => highlightWords({\n    text,\n    query\n  }), [text, query]);\n}\nvar Mark = (0, import_system12.forwardRef)(function Mark2(props, ref) {\n  const styles = (0, import_system12.useStyleConfig)(\"Mark\", props);\n  const ownProps = (0, import_system12.omitThemingProps)(props);\n  return /* @__PURE__ */(0, import_jsx_runtime12.jsx)(Box, {\n    ref,\n    ...ownProps,\n    as: \"mark\",\n    __css: {\n      bg: \"transparent\",\n      whiteSpace: \"nowrap\",\n      ...styles\n    }\n  });\n});\nfunction Highlight(props) {\n  const {\n    children,\n    query,\n    styles\n  } = props;\n  if (typeof children !== \"string\") {\n    throw new Error(\"The children prop of Highlight must be a string\");\n  }\n  const chunks = useHighlight({\n    query,\n    text: children\n  });\n  return /* @__PURE__ */(0, import_jsx_runtime12.jsx)(import_jsx_runtime12.Fragment, {\n    children: chunks.map((chunk, index) => {\n      return chunk.match ? /* @__PURE__ */(0, import_jsx_runtime12.jsx)(Mark, {\n        sx: styles,\n        children: chunk.text\n      }, index) : /* @__PURE__ */(0, import_jsx_runtime12.jsx)(import_react2.Fragment, {\n        children: chunk.text\n      }, index);\n    })\n  });\n}\n\n// src/kbd.tsx\nvar import_system13 = require(\"@chakra-ui/system\");\nvar import_shared_utils7 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime13 = require(\"react/jsx-runtime\");\nvar Kbd = (0, import_system13.forwardRef)(function Kbd2(props, ref) {\n  const styles = (0, import_system13.useStyleConfig)(\"Kbd\", props);\n  const {\n    className,\n    ...rest\n  } = (0, import_system13.omitThemingProps)(props);\n  return /* @__PURE__ */(0, import_jsx_runtime13.jsx)(import_system13.chakra.kbd, {\n    ref,\n    className: (0, import_shared_utils7.cx)(\"chakra-kbd\", className),\n    ...rest,\n    __css: {\n      fontFamily: \"mono\",\n      ...styles\n    }\n  });\n});\nKbd.displayName = \"Kbd\";\n\n// src/link.tsx\nvar import_system14 = require(\"@chakra-ui/system\");\nvar import_shared_utils8 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime14 = require(\"react/jsx-runtime\");\nvar Link = (0, import_system14.forwardRef)(function Link2(props, ref) {\n  const styles = (0, import_system14.useStyleConfig)(\"Link\", props);\n  const {\n    className,\n    isExternal,\n    ...rest\n  } = (0, import_system14.omitThemingProps)(props);\n  return /* @__PURE__ */(0, import_jsx_runtime14.jsx)(import_system14.chakra.a, {\n    target: isExternal ? \"_blank\" : void 0,\n    rel: isExternal ? \"noopener\" : void 0,\n    ref,\n    className: (0, import_shared_utils8.cx)(\"chakra-link\", className),\n    ...rest,\n    __css: styles\n  });\n});\nLink.displayName = \"Link\";\n\n// src/link-box.tsx\nvar import_system15 = require(\"@chakra-ui/system\");\nvar import_shared_utils9 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime15 = require(\"react/jsx-runtime\");\nvar LinkOverlay = (0, import_system15.forwardRef)(function LinkOverlay2(props, ref) {\n  const {\n    isExternal,\n    target,\n    rel,\n    className,\n    ...rest\n  } = props;\n  return /* @__PURE__ */(0, import_jsx_runtime15.jsx)(import_system15.chakra.a, {\n    ...rest,\n    ref,\n    className: (0, import_shared_utils9.cx)(\"chakra-linkbox__overlay\", className),\n    rel: isExternal ? \"noopener noreferrer\" : rel,\n    target: isExternal ? \"_blank\" : target,\n    __css: {\n      position: \"static\",\n      \"&::before\": {\n        content: \"''\",\n        cursor: \"inherit\",\n        display: \"block\",\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        zIndex: 0,\n        width: \"100%\",\n        height: \"100%\"\n      }\n    }\n  });\n});\nvar LinkBox = (0, import_system15.forwardRef)(function LinkBox2(props, ref) {\n  const {\n    className,\n    ...rest\n  } = props;\n  return /* @__PURE__ */(0, import_jsx_runtime15.jsx)(import_system15.chakra.div, {\n    ref,\n    position: \"relative\",\n    ...rest,\n    className: (0, import_shared_utils9.cx)(\"chakra-linkbox\", className),\n    __css: {\n      /* Elevate the links and abbreviations up */\n      \"a[href]:not(.chakra-linkbox__overlay), abbr[title]\": {\n        position: \"relative\",\n        zIndex: 1\n      }\n    }\n  });\n});\n\n// src/list.tsx\nvar import_icon = require(\"@chakra-ui/icon\");\nvar import_react_context = require(\"@chakra-ui/react-context\");\nvar import_react_children_utils = require(\"@chakra-ui/react-children-utils\");\nvar import_system16 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime16 = require(\"react/jsx-runtime\");\nvar [ListStylesProvider, useListStyles] = (0, import_react_context.createContext)({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `\n});\nvar List = (0, import_system16.forwardRef)(function List2(props, ref) {\n  const styles = (0, import_system16.useMultiStyleConfig)(\"List\", props);\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = (0, import_system16.omitThemingProps)(props);\n  const validChildren = (0, import_react_children_utils.getValidChildren)(children);\n  const selector = \"& > *:not(style) ~ *:not(style)\";\n  const spacingStyle = spacing ? {\n    [selector]: {\n      mt: spacing\n    }\n  } : {};\n  return /* @__PURE__ */(0, import_jsx_runtime16.jsx)(ListStylesProvider, {\n    value: styles,\n    children: /* @__PURE__ */(0, import_jsx_runtime16.jsx)(import_system16.chakra.ul, {\n      ref,\n      listStyleType: styleType,\n      listStylePosition: stylePosition,\n      role: \"list\",\n      __css: {\n        ...styles.container,\n        ...spacingStyle\n      },\n      ...rest,\n      children: validChildren\n    })\n  });\n});\nList.displayName = \"List\";\nvar OrderedList = (0, import_system16.forwardRef)((props, ref) => {\n  const {\n    as,\n    ...rest\n  } = props;\n  return /* @__PURE__ */(0, import_jsx_runtime16.jsx)(List, {\n    ref,\n    as: \"ol\",\n    styleType: \"decimal\",\n    marginStart: \"1em\",\n    ...rest\n  });\n});\nOrderedList.displayName = \"OrderedList\";\nvar UnorderedList = (0, import_system16.forwardRef)(function UnorderedList2(props, ref) {\n  const {\n    as,\n    ...rest\n  } = props;\n  return /* @__PURE__ */(0, import_jsx_runtime16.jsx)(List, {\n    ref,\n    as: \"ul\",\n    styleType: \"initial\",\n    marginStart: \"1em\",\n    ...rest\n  });\n});\nUnorderedList.displayName = \"UnorderedList\";\nvar ListItem = (0, import_system16.forwardRef)(function ListItem2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime16.jsx)(import_system16.chakra.li, {\n    ref,\n    ...props,\n    __css: styles.item\n  });\n});\nListItem.displayName = \"ListItem\";\nvar ListIcon = (0, import_system16.forwardRef)(function ListIcon2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime16.jsx)(import_icon.Icon, {\n    ref,\n    role: \"presentation\",\n    ...props,\n    __css: styles.icon\n  });\n});\nListIcon.displayName = \"ListIcon\";\n\n// src/simple-grid.tsx\nvar import_system17 = require(\"@chakra-ui/system\");\nvar import_breakpoint_utils3 = require(\"@chakra-ui/breakpoint-utils\");\nvar import_jsx_runtime17 = require(\"react/jsx-runtime\");\nvar SimpleGrid = (0, import_system17.forwardRef)(function SimpleGrid2(props, ref) {\n  const {\n    columns,\n    spacingX,\n    spacingY,\n    spacing,\n    minChildWidth,\n    ...rest\n  } = props;\n  const theme = (0, import_system17.useTheme)();\n  const templateColumns = minChildWidth ? widthToColumns(minChildWidth, theme) : countToColumns(columns);\n  return /* @__PURE__ */(0, import_jsx_runtime17.jsx)(Grid, {\n    ref,\n    gap: spacing,\n    columnGap: spacingX,\n    rowGap: spacingY,\n    templateColumns,\n    ...rest\n  });\n});\nSimpleGrid.displayName = \"SimpleGrid\";\nfunction toPx(n) {\n  return typeof n === \"number\" ? `${n}px` : n;\n}\nfunction widthToColumns(width, theme) {\n  return (0, import_breakpoint_utils3.mapResponsive)(width, value => {\n    const _value = (0, import_system17.getToken)(\"sizes\", value, toPx(value))(theme);\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`;\n  });\n}\nfunction countToColumns(count) {\n  return (0, import_breakpoint_utils3.mapResponsive)(count, value => value === null ? null : `repeat(${value}, minmax(0, 1fr))`);\n}\n\n// src/spacer.tsx\nvar import_system18 = require(\"@chakra-ui/system\");\nvar Spacer = (0, import_system18.chakra)(\"div\", {\n  baseStyle: {\n    flex: 1,\n    justifySelf: \"stretch\",\n    alignSelf: \"stretch\"\n  }\n});\nSpacer.displayName = \"Spacer\";\n\n// src/stack/h-stack.tsx\nvar import_system21 = require(\"@chakra-ui/system\");\n\n// src/stack/stack.tsx\nvar import_react_children_utils2 = require(\"@chakra-ui/react-children-utils\");\nvar import_shared_utils10 = require(\"@chakra-ui/shared-utils\");\nvar import_system20 = require(\"@chakra-ui/system\");\nvar import_react3 = require(\"react\");\n\n// src/stack/stack-item.tsx\nvar import_system19 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime18 = require(\"react/jsx-runtime\");\nvar StackItem = props => /* @__PURE__ */(0, import_jsx_runtime18.jsx)(import_system19.chakra.div, {\n  className: \"chakra-stack__item\",\n  ...props,\n  __css: {\n    display: \"inline-block\",\n    flex: \"0 0 auto\",\n    minWidth: 0,\n    ...props[\"__css\"]\n  }\n});\nStackItem.displayName = \"StackItem\";\n\n// src/stack/stack.utils.tsx\nvar import_breakpoint_utils4 = require(\"@chakra-ui/breakpoint-utils\");\nfunction getDividerStyles(options) {\n  const {\n    spacing,\n    direction\n  } = options;\n  const dividerStyles = {\n    column: {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\"\n    },\n    \"column-reverse\": {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\"\n    },\n    row: {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0\n    },\n    \"row-reverse\": {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0\n    }\n  };\n  return {\n    \"&\": (0, import_breakpoint_utils4.mapResponsive)(direction, value => dividerStyles[value])\n  };\n}\n\n// src/stack/stack.tsx\nvar import_jsx_runtime19 = require(\"react/jsx-runtime\");\nvar Stack = (0, import_system20.forwardRef)((props, ref) => {\n  const {\n    isInline,\n    direction: directionProp,\n    align,\n    justify,\n    spacing = \"0.5rem\",\n    wrap,\n    children,\n    divider,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props;\n  const direction = isInline ? \"row\" : directionProp != null ? directionProp : \"column\";\n  const dividerStyle = (0, import_react3.useMemo)(() => getDividerStyles({\n    spacing,\n    direction\n  }), [spacing, direction]);\n  const hasDivider = !!divider;\n  const shouldUseChildren = !shouldWrapChildren && !hasDivider;\n  const clones = (0, import_react3.useMemo)(() => {\n    const validChildren = (0, import_react_children_utils2.getValidChildren)(children);\n    return shouldUseChildren ? validChildren : validChildren.map((child, index) => {\n      const key = typeof child.key !== \"undefined\" ? child.key : index;\n      const isLast = index + 1 === validChildren.length;\n      const wrappedChild = /* @__PURE__ */(0, import_jsx_runtime19.jsx)(StackItem, {\n        children: child\n      }, key);\n      const _child = shouldWrapChildren ? wrappedChild : child;\n      if (!hasDivider) return _child;\n      const clonedDivider = (0, import_react3.cloneElement)(divider, {\n        __css: dividerStyle\n      });\n      const _divider = isLast ? null : clonedDivider;\n      return /* @__PURE__ */(0, import_jsx_runtime19.jsxs)(import_react3.Fragment, {\n        children: [_child, _divider]\n      }, key);\n    });\n  }, [divider, dividerStyle, hasDivider, shouldUseChildren, shouldWrapChildren, children]);\n  const _className = (0, import_shared_utils10.cx)(\"chakra-stack\", className);\n  return /* @__PURE__ */(0, import_jsx_runtime19.jsx)(import_system20.chakra.div, {\n    ref,\n    display: \"flex\",\n    alignItems: align,\n    justifyContent: justify,\n    flexDirection: direction,\n    flexWrap: wrap,\n    gap: hasDivider ? void 0 : spacing,\n    className: _className,\n    ...rest,\n    children: clones\n  });\n});\nStack.displayName = \"Stack\";\n\n// src/stack/h-stack.tsx\nvar import_jsx_runtime20 = require(\"react/jsx-runtime\");\nvar HStack = (0, import_system21.forwardRef)((props, ref) => /* @__PURE__ */(0, import_jsx_runtime20.jsx)(Stack, {\n  align: \"center\",\n  ...props,\n  direction: \"row\",\n  ref\n}));\nHStack.displayName = \"HStack\";\n\n// src/stack/stack-divider.tsx\nvar import_system22 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime21 = require(\"react/jsx-runtime\");\nvar StackDivider = props => /* @__PURE__ */(0, import_jsx_runtime21.jsx)(import_system22.chakra.div, {\n  className: \"chakra-stack__divider\",\n  ...props,\n  __css: {\n    ...props[\"__css\"],\n    borderWidth: 0,\n    alignSelf: \"stretch\",\n    borderColor: \"inherit\",\n    width: \"auto\",\n    height: \"auto\"\n  }\n});\nStackDivider.displayName = \"StackDivider\";\n\n// src/stack/v-stack.tsx\nvar import_system23 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime22 = require(\"react/jsx-runtime\");\nvar VStack = (0, import_system23.forwardRef)((props, ref) => /* @__PURE__ */(0, import_jsx_runtime22.jsx)(Stack, {\n  align: \"center\",\n  ...props,\n  direction: \"column\",\n  ref\n}));\nVStack.displayName = \"VStack\";\n\n// src/text.tsx\nvar import_system24 = require(\"@chakra-ui/system\");\nvar import_shared_utils11 = require(\"@chakra-ui/shared-utils\");\nvar import_object_utils2 = require(\"@chakra-ui/object-utils\");\nvar import_jsx_runtime23 = require(\"react/jsx-runtime\");\nvar Text = (0, import_system24.forwardRef)(function Text2(props, ref) {\n  const styles = (0, import_system24.useStyleConfig)(\"Text\", props);\n  const {\n    className,\n    align,\n    decoration,\n    casing,\n    ...rest\n  } = (0, import_system24.omitThemingProps)(props);\n  const aliasedProps = (0, import_object_utils2.compact)({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */(0, import_jsx_runtime23.jsx)(import_system24.chakra.p, {\n    ref,\n    className: (0, import_shared_utils11.cx)(\"chakra-text\", props.className),\n    ...aliasedProps,\n    ...rest,\n    __css: styles\n  });\n});\nText.displayName = \"Text\";\n\n// src/wrap.tsx\nvar import_shared_utils12 = require(\"@chakra-ui/shared-utils\");\nvar import_system25 = require(\"@chakra-ui/system\");\nvar import_react4 = require(\"react\");\nvar import_jsx_runtime24 = require(\"react/jsx-runtime\");\nvar Wrap = (0, import_system25.forwardRef)(function Wrap2(props, ref) {\n  const {\n    spacing = \"0.5rem\",\n    spacingX,\n    spacingY,\n    children,\n    justify,\n    direction,\n    align,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props;\n  const _children = (0, import_react4.useMemo)(() => shouldWrapChildren ? import_react4.Children.map(children, (child, index) => /* @__PURE__ */(0, import_jsx_runtime24.jsx)(WrapItem, {\n    children: child\n  }, index)) : children, [children, shouldWrapChildren]);\n  return /* @__PURE__ */(0, import_jsx_runtime24.jsx)(import_system25.chakra.div, {\n    ref,\n    className: (0, import_shared_utils12.cx)(\"chakra-wrap\", className),\n    ...rest,\n    children: /* @__PURE__ */(0, import_jsx_runtime24.jsx)(import_system25.chakra.ul, {\n      className: \"chakra-wrap__list\",\n      __css: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: justify,\n        alignItems: align,\n        flexDirection: direction,\n        listStyleType: \"none\",\n        gap: spacing,\n        columnGap: spacingX,\n        rowGap: spacingY,\n        padding: \"0\"\n      },\n      children: _children\n    })\n  });\n});\nWrap.displayName = \"Wrap\";\nvar WrapItem = (0, import_system25.forwardRef)(function WrapItem2(props, ref) {\n  const {\n    className,\n    ...rest\n  } = props;\n  return /* @__PURE__ */(0, import_jsx_runtime24.jsx)(import_system25.chakra.li, {\n    ref,\n    __css: {\n      display: \"flex\",\n      alignItems: \"flex-start\"\n    },\n    className: (0, import_shared_utils12.cx)(\"chakra-wrap__listitem\", className),\n    ...rest\n  });\n});\nWrapItem.displayName = \"WrapItem\";\n\n// src/indicator.tsx\nvar import_breakpoint_utils5 = require(\"@chakra-ui/breakpoint-utils\");\nvar import_system26 = require(\"@chakra-ui/system\");\nvar import_react5 = require(\"react\");\nvar import_jsx_runtime25 = require(\"react/jsx-runtime\");\nvar Indicator = (0, import_system26.forwardRef)(function Indicator2(props, ref) {\n  const {\n    offsetX,\n    offsetY,\n    offset = \"0\",\n    placement = \"top-end\",\n    ...rest\n  } = props;\n  const styles = (0, import_react5.useMemo)(() => ({\n    display: \"inline-flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    insetBlockStart: (0, import_breakpoint_utils5.mapResponsive)(placement, v => {\n      const [side] = v.split(\"-\");\n      const map = {\n        top: offsetY != null ? offsetY : offset,\n        middle: \"50%\",\n        bottom: \"auto\"\n      };\n      return map[side];\n    }),\n    insetBlockEnd: (0, import_breakpoint_utils5.mapResponsive)(placement, v => {\n      const [side] = v.split(\"-\");\n      const map = {\n        top: \"auto\",\n        middle: \"50%\",\n        bottom: offsetY != null ? offsetY : offset\n      };\n      return map[side];\n    }),\n    insetStart: (0, import_breakpoint_utils5.mapResponsive)(placement, v => {\n      const [, align] = v.split(\"-\");\n      const map = {\n        start: offsetX != null ? offsetX : offset,\n        center: \"50%\",\n        end: \"auto\"\n      };\n      return map[align];\n    }),\n    insetEnd: (0, import_breakpoint_utils5.mapResponsive)(placement, v => {\n      const [, align] = v.split(\"-\");\n      const map = {\n        start: \"auto\",\n        center: \"50%\",\n        end: offsetX != null ? offsetX : offset\n      };\n      return map[align];\n    }),\n    translate: (0, import_breakpoint_utils5.mapResponsive)(placement, v => {\n      const [side, align] = v.split(\"-\");\n      const mapX = {\n        start: \"-50%\",\n        center: \"-50%\",\n        end: \"50%\"\n      };\n      const mapY = {\n        top: \"-50%\",\n        middle: \"-50%\",\n        bottom: \"50%\"\n      };\n      return `${mapX[align]} ${mapY[side]}`;\n    })\n  }), [offset, offsetX, offsetY, placement]);\n  return /* @__PURE__ */(0, import_jsx_runtime25.jsx)(import_system26.chakra.div, {\n    ref,\n    __css: styles,\n    ...rest\n  });\n});\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  AbsoluteCenter,\n  AspectRatio,\n  Badge,\n  Box,\n  Center,\n  Circle,\n  Code,\n  Container,\n  Divider,\n  Flex,\n  Grid,\n  GridItem,\n  HStack,\n  Heading,\n  Highlight,\n  Indicator,\n  Kbd,\n  Link,\n  LinkBox,\n  LinkOverlay,\n  List,\n  ListIcon,\n  ListItem,\n  Mark,\n  OrderedList,\n  SimpleGrid,\n  Spacer,\n  Square,\n  Stack,\n  StackDivider,\n  StackItem,\n  Text,\n  UnorderedList,\n  VStack,\n  Wrap,\n  WrapItem,\n  useHighlight,\n  useListStyles\n});","map":null,"metadata":{},"sourceType":"script"}