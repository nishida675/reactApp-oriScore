{"ast":null,"code":"var _jsxFileName = \"/Users/nishidanaoto/ateori-app/src/components/pages/VotePage.tsx\",\n  _s = $RefreshSig$();\nimport { memo, useCallback, useContext, useEffect, useRef } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { Spinner, Wrap, WrapItem, Center, useDisclosure } from \"@chakra-ui/react\";\nimport { LoginUserContext } from '../../providers/LoginUserProvider';\nimport { useAllTournament } from \"../../hooks/useAllTournament\";\nimport { TournamentCard } from \"../organisms/tournament/TournamentCard\";\nimport { useSelectTournament } from \"../../hooks/useSelectTournament\";\nimport { TournamentDetailModal } from \"../organisms/tournament/TournamentDetailModel\";\nimport { BaseButton } from \"../atoms/button/BaseButton\";\nimport { useAllParticipant } from \"../../hooks/useAllParticipant\";\nimport { useAllClass } from \"../../hooks/useAllClass\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const VotePage = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(() => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    loginUser,\n    setLoginUser\n  } = useContext(LoginUserContext);\n  const timerId = useRef(null);\n  const {\n    getTournaments,\n    tournaments,\n    loading\n  } = useAllTournament();\n  const {\n    onSelectTournament,\n    selectedTournament\n  } = useSelectTournament();\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const {\n    getUsers,\n    users1,\n    users2\n  } = useAllParticipant();\n  const {\n    getClases,\n    clases,\n    loading2\n  } = useAllClass();\n\n  // 自動ログアウトの時間（ミリ秒）\n  const autoLogoutTime = 600000; // 10分\n  //const autoLogoutTime = 10000; // 10秒\n\n  useEffect(() => {\n    const resetTimer = () => {\n      // タイマーをリセット\n      if (timerId.current) {\n        clearTimeout(timerId.current);\n      }\n\n      // 新たなタイマーをセット\n      timerId.current = setTimeout(() => {\n        // ログアウト処理（例: setLoginUser(null)）\n        setLoginUser(null);\n\n        // トップページにリダイレクト\n        navigate('/');\n      }, autoLogoutTime);\n    };\n\n    // ユーザーがアクションを起こすたびにタイマーをリセット\n    const resetTimerOnAction = () => {\n      resetTimer();\n    };\n\n    // 初回実行時にタイマーをセット\n    resetTimer();\n\n    // ユーザーのアクション（例: クリック）があった場合にタイマーをリセット\n    document.addEventListener('click', resetTimerOnAction);\n    return () => {\n      // コンポーネントがアンマウントされたときにクリア\n      if (timerId.current) {\n        clearTimeout(timerId.current);\n      }\n      document.removeEventListener('click', resetTimerOnAction);\n    };\n  }, [setLoginUser, navigate, timerId]);\n\n  // loginUserが存在するかどうかのチェック\n  useEffect(() => {\n    // loginUserが存在しない場合、トップページに遷移\n    if (!loginUser) {\n      navigate('/');\n    }\n  }, [loginUser, navigate]);\n  useEffect(() => getTournaments(), [getTournaments]);\n  const onClickTournament = useCallback(async tournamentId => {\n    try {\n      // getClasesを実行\n      const newClases = await getClases(tournamentId);\n\n      // 取得したデータを使用してgetUsersを実行\n      const stringClasses = newClases.map(participant => participant.className);\n      await getUsers(tournamentId, stringClasses);\n\n      // 適切なデータが揃った後にトーナメントの選択処理を実行\n      onSelectTournament({\n        tournamentId,\n        tournaments,\n        onOpen\n      });\n    } catch (error) {\n      // エラーハンドリング（必要に応じて）\n      console.error(\"Error during onClickTournament:\", error);\n    }\n  }, [tournaments, onSelectTournament, onOpen, getClases, getUsers, clases]);\n  const userId = loginUser === null || loginUser === void 0 ? void 0 : loginUser.id;\n  console.log(\"いいいい\", userId);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading ? /*#__PURE__*/_jsxDEV(Center, {\n      h: \"100vh\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Wrap, {\n      p: {\n        base: 4,\n        md: 10\n      },\n      children: tournaments.map(tournament => /*#__PURE__*/_jsxDEV(WrapItem, {\n        mx: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(TournamentCard, {\n          tournamentName: tournament.tournamentName,\n          eventDate2: tournament.eventDate2,\n          children: /*#__PURE__*/_jsxDEV(BaseButton, {\n            tournamentId: tournament.tournamentId,\n            loading: loading2,\n            onClick: onClickTournament,\n            children: \"\\u4E88\\u60F3\\u3059\\u308B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this)\n      }, tournament.tournamentId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TournamentDetailModal, {\n      id: loginUser === null || loginUser === void 0 ? void 0 : loginUser.id,\n      selectedTournament: selectedTournament,\n      users1: users1,\n      users2: users2,\n      clases: clases,\n      isOpen: isOpen,\n      onClose: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}, \"0aKIWKUPOsujiQtGY2HHFm4vTxA=\", false, function () {\n  return [useNavigate, useAllTournament, useSelectTournament, useDisclosure, useAllParticipant, useAllClass];\n})), \"0aKIWKUPOsujiQtGY2HHFm4vTxA=\", false, function () {\n  return [useNavigate, useAllTournament, useSelectTournament, useDisclosure, useAllParticipant, useAllClass];\n});\n_c2 = VotePage;\nvar _c, _c2;\n$RefreshReg$(_c, \"VotePage$memo\");\n$RefreshReg$(_c2, \"VotePage\");","map":{"version":3,"names":["memo","useCallback","useContext","useEffect","useRef","useNavigate","Spinner","Wrap","WrapItem","Center","useDisclosure","LoginUserContext","useAllTournament","TournamentCard","useSelectTournament","TournamentDetailModal","BaseButton","useAllParticipant","useAllClass","jsxDEV","_jsxDEV","Fragment","_Fragment","VotePage","_s","_c","navigate","loginUser","setLoginUser","timerId","getTournaments","tournaments","loading","onSelectTournament","selectedTournament","isOpen","onOpen","onClose","getUsers","users1","users2","getClases","clases","loading2","autoLogoutTime","resetTimer","current","clearTimeout","setTimeout","resetTimerOnAction","document","addEventListener","removeEventListener","onClickTournament","tournamentId","newClases","stringClasses","map","participant","className","error","console","userId","id","log","children","h","fileName","_jsxFileName","lineNumber","columnNumber","p","base","md","tournament","mx","tournamentName","eventDate2","onClick","_c2","$RefreshReg$"],"sources":["/Users/nishidanaoto/ateori-app/src/components/pages/VotePage.tsx"],"sourcesContent":["import { memo, useCallback, useContext, useEffect, useRef } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Spinner,\n  Wrap,\n  WrapItem,\n  Center,\n  useDisclosure,\n} from \"@chakra-ui/react\";\n\nimport { LoginUserContext } from '../../providers/LoginUserProvider';\nimport { useAllTournament } from \"../../hooks/useAllTournament\";\nimport { TournamentCard } from \"../organisms/tournament/TournamentCard\";\nimport { useSelectTournament } from \"../../hooks/useSelectTournament\";\nimport { TournamentDetailModal } from \"../organisms/tournament/TournamentDetailModel\";\nimport { BaseButton } from \"../atoms/button/BaseButton\";\nimport { useAllParticipant } from \"../../hooks/useAllParticipant\";\nimport { useAllClass } from \"../../hooks/useAllClass\";\n\nexport const VotePage = memo(() => {\n\n  const navigate = useNavigate();\n  const { loginUser, setLoginUser } = useContext(LoginUserContext);\n  const timerId = useRef<NodeJS.Timeout | null>(null);\n  const { getTournaments, tournaments, loading } = useAllTournament();\n  const { onSelectTournament, selectedTournament } = useSelectTournament();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const { getUsers, users1, users2 } = useAllParticipant();\n  const { getClases, clases, loading2} = useAllClass();\n\n  // 自動ログアウトの時間（ミリ秒）\n  const autoLogoutTime = 600000; // 10分\n  //const autoLogoutTime = 10000; // 10秒\n\n  useEffect(() => {\n    const resetTimer = () => {\n      // タイマーをリセット\n      if (timerId.current) {\n        clearTimeout(timerId.current);\n      }\n\n      // 新たなタイマーをセット\n      timerId.current = setTimeout(() => {\n        // ログアウト処理（例: setLoginUser(null)）\n        setLoginUser(null);\n\n        // トップページにリダイレクト\n        navigate('/');\n      }, autoLogoutTime);\n    };\n\n    // ユーザーがアクションを起こすたびにタイマーをリセット\n    const resetTimerOnAction = () => {\n      resetTimer();\n    };\n\n    // 初回実行時にタイマーをセット\n    resetTimer();\n\n    // ユーザーのアクション（例: クリック）があった場合にタイマーをリセット\n    document.addEventListener('click', resetTimerOnAction);\n\n    return () => {\n      // コンポーネントがアンマウントされたときにクリア\n      if (timerId.current) {\n        clearTimeout(timerId.current);\n      }\n      document.removeEventListener('click', resetTimerOnAction);\n    };\n  }, [setLoginUser, navigate, timerId]);\n\n  // loginUserが存在するかどうかのチェック\n  useEffect(() => {\n    // loginUserが存在しない場合、トップページに遷移\n    if (!loginUser) {\n      navigate('/');\n    }\n  }, [loginUser, navigate]);\n\n  useEffect(() => getTournaments(), [getTournaments]);\n\n  const onClickTournament = useCallback(\n    async (tournamentId: number) => {\n      try {\n        // getClasesを実行\n        const newClases = await getClases(tournamentId);\n  \n        // 取得したデータを使用してgetUsersを実行\n        const stringClasses = newClases.map(participant => participant.className);\n        await getUsers(tournamentId, stringClasses);\n  \n        // 適切なデータが揃った後にトーナメントの選択処理を実行\n        onSelectTournament({ tournamentId, tournaments, onOpen });\n      } catch (error) {\n        // エラーハンドリング（必要に応じて）\n        console.error(\"Error during onClickTournament:\", error);\n      }\n    },\n    [tournaments, onSelectTournament, onOpen, getClases, getUsers, clases]\n  );\n\n  const userId = loginUser?.id;\n      console.log(\"いいいい\", userId);\n   \n      \n  return (\n    <>\n      {loading ? (\n        <Center h=\"100vh\">\n          <Spinner />\n        </Center>\n      ) : (\n        <Wrap p={{ base: 4, md: 10 }}>\n          {tournaments.map((tournament) => (\n            <WrapItem key={tournament.tournamentId} mx=\"auto\">\n              <TournamentCard\n                tournamentName={tournament.tournamentName}\n                eventDate2={tournament.eventDate2}\n              > \n                <BaseButton\n                  tournamentId={tournament.tournamentId}\n                  loading={loading2}\n                  onClick={onClickTournament}\n                >\n                  予想する\n                </BaseButton>\n              </TournamentCard>\n            </WrapItem>\n          ))}\n        </Wrap>\n      )}\n      <TournamentDetailModal\n        id={loginUser?.id}\n        selectedTournament={selectedTournament}\n        users1={users1}\n        users2={users2}\n        clases={clases}\n        isOpen={isOpen}\n        onClose={onClose}\n      />\n    </>\n  );\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}