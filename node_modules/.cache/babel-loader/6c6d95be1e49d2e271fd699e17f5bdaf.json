{"ast":null,"code":"'use client';\n\n// src/index.ts\nimport { useEventListener } from \"@chakra-ui/react-use-event-listener\";\nfunction isRefObject(val) {\n  return \"current\" in val;\n}\nvar isDom = () => typeof window !== \"undefined\";\nfunction getPlatform() {\n  var _a;\n  const agent = navigator.userAgentData;\n  return (_a = agent == null ? void 0 : agent.platform) != null ? _a : navigator.platform;\n}\nvar vn = v => isDom() && v.test(navigator.vendor);\nvar pt = v => isDom() && v.test(getPlatform());\nvar isApple = () => pt(/mac|iphone|ipad|ipod/i);\nvar isSafari = () => isApple() && vn(/apple/i);\nfunction useFocusOnPointerDown(props) {\n  const {\n    ref,\n    elements,\n    enabled\n  } = props;\n  const doc = () => {\n    var _a, _b;\n    return (_b = (_a = ref.current) == null ? void 0 : _a.ownerDocument) != null ? _b : document;\n  };\n  useEventListener(doc, \"pointerdown\", event => {\n    if (!isSafari() || !enabled) return;\n    const target = event.target;\n    const els = elements != null ? elements : [ref];\n    const isValidTarget = els.some(elementOrRef => {\n      const el = isRefObject(elementOrRef) ? elementOrRef.current : elementOrRef;\n      return (el == null ? void 0 : el.contains(target)) || el === target;\n    });\n    if (doc().activeElement !== target && isValidTarget) {\n      event.preventDefault();\n      target.focus();\n    }\n  });\n}\nexport { useFocusOnPointerDown };","map":null,"metadata":{},"sourceType":"module"}