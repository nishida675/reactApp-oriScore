{"ast":null,"code":"'use client';\n\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  EnvironmentProvider: () => EnvironmentProvider,\n  useEnvironment: () => useEnvironment\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/env.tsx\nvar import_react_use_safe_layout_effect = require(\"@chakra-ui/react-use-safe-layout-effect\");\nvar import_react = require(\"react\");\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar EnvironmentContext = (0, import_react.createContext)({\n  getDocument() {\n    return document;\n  },\n  getWindow() {\n    return window;\n  }\n});\nEnvironmentContext.displayName = \"EnvironmentContext\";\nfunction useEnvironment({\n  defer\n} = {}) {\n  const [, forceUpdate] = (0, import_react.useReducer)(c => c + 1, 0);\n  (0, import_react_use_safe_layout_effect.useSafeLayoutEffect)(() => {\n    if (!defer) return;\n    forceUpdate();\n  }, [defer]);\n  return (0, import_react.useContext)(EnvironmentContext);\n}\nfunction EnvironmentProvider(props) {\n  const {\n    children,\n    environment: environmentProp,\n    disabled\n  } = props;\n  const ref = (0, import_react.useRef)(null);\n  const context = (0, import_react.useMemo)(() => {\n    if (environmentProp) return environmentProp;\n    return {\n      getDocument: () => {\n        var _a, _b;\n        return (_b = (_a = ref.current) == null ? void 0 : _a.ownerDocument) != null ? _b : document;\n      },\n      getWindow: () => {\n        var _a, _b;\n        return (_b = (_a = ref.current) == null ? void 0 : _a.ownerDocument.defaultView) != null ? _b : window;\n      }\n    };\n  }, [environmentProp]);\n  const showSpan = !disabled || !environmentProp;\n  return /* @__PURE__ */(0, import_jsx_runtime.jsxs)(EnvironmentContext.Provider, {\n    value: context,\n    children: [children, showSpan && /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"span\", {\n      id: \"__chakra_env\",\n      hidden: true,\n      ref\n    })]\n  });\n}\nEnvironmentProvider.displayName = \"EnvironmentProvider\";\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  EnvironmentProvider,\n  useEnvironment\n});","map":null,"metadata":{},"sourceType":"script"}