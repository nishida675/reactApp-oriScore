{"ast":null,"code":"var _jsxFileName = \"/Users/nishidanaoto/ateori-app/src/components/pages/VotePage.tsx\",\n  _s = $RefreshSig$();\nimport { memo, useContext, useEffect, useRef } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { LoginUserContext } from '../../providers/LoginUserProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const VotePage = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(() => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    loginUser,\n    setLoginUser\n  } = useContext(LoginUserContext);\n  const timerId = useRef(null);\n  const VoteMove = () => {\n    navigate('/vote');\n  };\n  const RankingMove = () => {\n    navigate('/ranking');\n  };\n\n  // 自動ログアウトの時間（ミリ秒）\n  const autoLogoutTime = 600000; // 10分\n  //const autoLogoutTime = 10000; // 10秒\n\n  useEffect(() => {\n    const resetTimer = () => {\n      // タイマーをリセット\n      if (timerId.current) {\n        clearTimeout(timerId.current);\n      }\n\n      // 新たなタイマーをセット\n      timerId.current = setTimeout(() => {\n        // ログアウト処理（例: setLoginUser(null)）\n        setLoginUser(null);\n\n        // トップページにリダイレクト\n        navigate('/');\n      }, autoLogoutTime);\n    };\n\n    // ユーザーがアクションを起こすたびにタイマーをリセット\n    const resetTimerOnAction = () => {\n      resetTimer();\n    };\n\n    // 初回実行時にタイマーをセット\n    resetTimer();\n\n    // ユーザーのアクション（例: クリック）があった場合にタイマーをリセット\n    document.addEventListener('click', resetTimerOnAction);\n    return () => {\n      // コンポーネントがアンマウントされたときにクリア\n      if (timerId.current) {\n        clearTimeout(timerId.current);\n      }\n      document.removeEventListener('click', resetTimerOnAction);\n    };\n  }, [setLoginUser, navigate, timerId]);\n\n  // loginUserが存在するかどうかのチェック\n  useEffect(() => {\n    // loginUserが存在しない場合、トップページに遷移\n    if (!loginUser) {\n      navigate('/');\n    }\n  }, [loginUser, navigate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u6295\\u7968\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}, \"GE8a8Ohoufr8u8Ax8SdsdeRekU8=\", false, function () {\n  return [useNavigate];\n})), \"GE8a8Ohoufr8u8Ax8SdsdeRekU8=\", false, function () {\n  return [useNavigate];\n});\n_c2 = VotePage;\nvar _c, _c2;\n$RefreshReg$(_c, \"VotePage$memo\");\n$RefreshReg$(_c2, \"VotePage\");","map":{"version":3,"names":["memo","useContext","useEffect","useRef","useNavigate","LoginUserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","VotePage","_s","_c","navigate","loginUser","setLoginUser","timerId","VoteMove","RankingMove","autoLogoutTime","resetTimer","current","clearTimeout","setTimeout","resetTimerOnAction","document","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/nishidanaoto/ateori-app/src/components/pages/VotePage.tsx"],"sourcesContent":["import { memo, useContext, useEffect, useRef } from \"react\";\nimport { useNavigate } from 'react-router-dom';\n\nimport { LoginUserContext } from '../../providers/LoginUserProvider';\n\nexport const VotePage = memo(() => {\n\n  const navigate = useNavigate();\n  const { loginUser, setLoginUser } = useContext(LoginUserContext);\n  const timerId = useRef<NodeJS.Timeout | null>(null);\n\n  const VoteMove = () => {\n    navigate('/vote');\n  }\n  const RankingMove = () => {\n    navigate('/ranking');\n  }\n\n  // 自動ログアウトの時間（ミリ秒）\n  const autoLogoutTime = 600000; // 10分\n  //const autoLogoutTime = 10000; // 10秒\n\n  useEffect(() => {\n    const resetTimer = () => {\n      // タイマーをリセット\n      if (timerId.current) {\n        clearTimeout(timerId.current);\n      }\n\n      // 新たなタイマーをセット\n      timerId.current = setTimeout(() => {\n        // ログアウト処理（例: setLoginUser(null)）\n        setLoginUser(null);\n\n        // トップページにリダイレクト\n        navigate('/');\n      }, autoLogoutTime);\n    };\n\n    // ユーザーがアクションを起こすたびにタイマーをリセット\n    const resetTimerOnAction = () => {\n      resetTimer();\n    };\n\n    // 初回実行時にタイマーをセット\n    resetTimer();\n\n    // ユーザーのアクション（例: クリック）があった場合にタイマーをリセット\n    document.addEventListener('click', resetTimerOnAction);\n\n    return () => {\n      // コンポーネントがアンマウントされたときにクリア\n      if (timerId.current) {\n        clearTimeout(timerId.current);\n      }\n      document.removeEventListener('click', resetTimerOnAction);\n    };\n  }, [setLoginUser, navigate, timerId]);\n\n  // loginUserが存在するかどうかのチェック\n  useEffect(() => {\n    // loginUserが存在しない場合、トップページに遷移\n    if (!loginUser) {\n      navigate('/');\n    }\n  }, [loginUser, navigate]);\n  return (\n    <>\n      <p>投票</p>\n      \n    </>\n  );\n});\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,UAAU,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC3D,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,SAASC,gBAAgB,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErE,OAAO,MAAMC,QAAQ,gBAAAC,EAAA,eAAGX,IAAI,CAAAY,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAAA,EAAA;EAEjC,MAAME,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEU,SAAS;IAAEC;EAAa,CAAC,GAAGd,UAAU,CAACI,gBAAgB,CAAC;EAChE,MAAMW,OAAO,GAAGb,MAAM,CAAwB,IAAI,CAAC;EAEnD,MAAMc,QAAQ,GAAGA,CAAA,KAAM;IACrBJ,QAAQ,CAAC,OAAO,CAAC;EACnB,CAAC;EACD,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxBL,QAAQ,CAAC,UAAU,CAAC;EACtB,CAAC;;EAED;EACA,MAAMM,cAAc,GAAG,MAAM,CAAC,CAAC;EAC/B;;EAEAjB,SAAS,CAAC,MAAM;IACd,MAAMkB,UAAU,GAAGA,CAAA,KAAM;MACvB;MACA,IAAIJ,OAAO,CAACK,OAAO,EAAE;QACnBC,YAAY,CAACN,OAAO,CAACK,OAAO,CAAC;MAC/B;;MAEA;MACAL,OAAO,CAACK,OAAO,GAAGE,UAAU,CAAC,MAAM;QACjC;QACAR,YAAY,CAAC,IAAI,CAAC;;QAElB;QACAF,QAAQ,CAAC,GAAG,CAAC;MACf,CAAC,EAAEM,cAAc,CAAC;IACpB,CAAC;;IAED;IACA,MAAMK,kBAAkB,GAAGA,CAAA,KAAM;MAC/BJ,UAAU,CAAC,CAAC;IACd,CAAC;;IAED;IACAA,UAAU,CAAC,CAAC;;IAEZ;IACAK,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAEF,kBAAkB,CAAC;IAEtD,OAAO,MAAM;MACX;MACA,IAAIR,OAAO,CAACK,OAAO,EAAE;QACnBC,YAAY,CAACN,OAAO,CAACK,OAAO,CAAC;MAC/B;MACAI,QAAQ,CAACE,mBAAmB,CAAC,OAAO,EAAEH,kBAAkB,CAAC;IAC3D,CAAC;EACH,CAAC,EAAE,CAACT,YAAY,EAAEF,QAAQ,EAAEG,OAAO,CAAC,CAAC;;EAErC;EACAd,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACY,SAAS,EAAE;MACdD,QAAQ,CAAC,GAAG,CAAC;IACf;EACF,CAAC,EAAE,CAACC,SAAS,EAAED,QAAQ,CAAC,CAAC;EACzB,oBACEN,OAAA,CAAAE,SAAA;IAAAmB,QAAA,eACErB,OAAA;MAAAqB,QAAA,EAAG;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC,gBAET,CAAC;AAEP,CAAC;EAAA,QAjEkB5B,WAAW;AAAA,EAiE7B,CAAC;EAAA,QAjEiBA,WAAW;AAAA,EAiE5B;AAAC6B,GAAA,GAnEUvB,QAAQ;AAAA,IAAAE,EAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}