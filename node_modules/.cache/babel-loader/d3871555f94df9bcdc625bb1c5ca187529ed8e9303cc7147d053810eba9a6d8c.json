{"ast":null,"code":"import{useCallback,useState}from\"react\";import axios from\"axios\";import{useNavigate}from\"react-router-dom\";import{useMessage}from\"./useMessage\";import{useLoginUser}from\"../hooks/useLoginUser\";export const useAuth=()=>{const history=useNavigate();const{showMessage}=useMessage();const{setLoginUser}=useLoginUser();const apiUrl=\"http://localhost:8080/api/authLogin\";const[loading,setLoading]=useState(false);const login=useCallback((name,pass)=>{setLoading(true);axios.post(apiUrl,{name:name,pass:pass}).then(res=>{if(res.data){const isAdmin=res.data.id===1?true:false;setLoginUser({...res.data,isAdmin});showMessage({title:\"ログインしました\",status:\"success\"});history(\"/vote\");}else{showMessage({title:\"ユーザーが見つかりません\",status:\"error\"});setLoading(false);}}).catch(()=>{showMessage({title:\"ログインできません\",status:\"error\"});setLoading(false);});},[history,showMessage,setLoginUser]);return{login,loading};};","map":{"version":3,"names":["useCallback","useState","axios","useNavigate","useMessage","useLoginUser","useAuth","history","showMessage","setLoginUser","apiUrl","loading","setLoading","login","name","pass","post","then","res","data","isAdmin","id","title","status","catch"],"sources":["/Users/nishidanaoto/ateori-app/src/hooks/useAuth.ts"],"sourcesContent":["import { useCallback, useState } from \"react\";\nimport axios from \"axios\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { User } from \"../types/api/user\";\nimport { useMessage } from \"./useMessage\";\nimport { useLoginUser } from \"../hooks/useLoginUser\";\n\nexport const useAuth = () => {\n  const history = useNavigate();\n  const { showMessage } = useMessage();\n  const { setLoginUser } = useLoginUser();\n  const apiUrl = \"http://localhost:8080/api/authLogin\";\n\n  const [loading, setLoading] = useState(false);\n  const login = useCallback(\n    (name: string, pass: string) => {\n      setLoading(true);\n      axios\n      .post<User>(apiUrl, {\n        name: name,\n        pass: pass\n      })\n        .then((res) => {\n          if (res.data) {\n            const isAdmin = res.data.id === 1 ? true : false;\n            setLoginUser({ ...res.data, isAdmin });\n            showMessage({ title: \"ログインしました\", status: \"success\" });\n            history(\"/vote\");\n          } else {\n            showMessage({ title: \"ユーザーが見つかりません\", status: \"error\" });\n            setLoading(false);\n          }\n        })\n        .catch(() => {\n          showMessage({ title: \"ログインできません\", status: \"error\" });\n          setLoading(false);\n        });\n    },\n    [history, showMessage, setLoginUser]\n  );\n  return { login, loading };\n};"],"mappings":"AAAA,OAASA,WAAW,CAAEC,QAAQ,KAAQ,OAAO,CAC7C,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB,OAASC,WAAW,KAAQ,kBAAkB,CAE9C,OAASC,UAAU,KAAQ,cAAc,CACzC,OAASC,YAAY,KAAQ,uBAAuB,CAEpD,MAAO,MAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAGJ,WAAW,CAAC,CAAC,CAC7B,KAAM,CAAEK,WAAY,CAAC,CAAGJ,UAAU,CAAC,CAAC,CACpC,KAAM,CAAEK,YAAa,CAAC,CAAGJ,YAAY,CAAC,CAAC,CACvC,KAAM,CAAAK,MAAM,CAAG,qCAAqC,CAEpD,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAAAY,KAAK,CAAGb,WAAW,CACvB,CAACc,IAAY,CAAEC,IAAY,GAAK,CAC9BH,UAAU,CAAC,IAAI,CAAC,CAChBV,KAAK,CACJc,IAAI,CAAON,MAAM,CAAE,CAClBI,IAAI,CAAEA,IAAI,CACVC,IAAI,CAAEA,IACR,CAAC,CAAC,CACCE,IAAI,CAAEC,GAAG,EAAK,CACb,GAAIA,GAAG,CAACC,IAAI,CAAE,CACZ,KAAM,CAAAC,OAAO,CAAGF,GAAG,CAACC,IAAI,CAACE,EAAE,GAAK,CAAC,CAAG,IAAI,CAAG,KAAK,CAChDZ,YAAY,CAAC,CAAE,GAAGS,GAAG,CAACC,IAAI,CAAEC,OAAQ,CAAC,CAAC,CACtCZ,WAAW,CAAC,CAAEc,KAAK,CAAE,UAAU,CAAEC,MAAM,CAAE,SAAU,CAAC,CAAC,CACrDhB,OAAO,CAAC,OAAO,CAAC,CAClB,CAAC,IAAM,CACLC,WAAW,CAAC,CAAEc,KAAK,CAAE,cAAc,CAAEC,MAAM,CAAE,OAAQ,CAAC,CAAC,CACvDX,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAAC,CACDY,KAAK,CAAC,IAAM,CACXhB,WAAW,CAAC,CAAEc,KAAK,CAAE,WAAW,CAAEC,MAAM,CAAE,OAAQ,CAAC,CAAC,CACpDX,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAC,CACN,CAAC,CACD,CAACL,OAAO,CAAEC,WAAW,CAAEC,YAAY,CACrC,CAAC,CACD,MAAO,CAAEI,KAAK,CAAEF,OAAQ,CAAC,CAC3B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}