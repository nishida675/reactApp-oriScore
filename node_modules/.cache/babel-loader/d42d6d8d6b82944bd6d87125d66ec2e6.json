{"ast":null,"code":"'use client';\n\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Avatar: () => Avatar,\n  AvatarBadge: () => AvatarBadge,\n  AvatarGroup: () => AvatarGroup,\n  GenericAvatarIcon: () => GenericAvatarIcon,\n  useAvatarStyles: () => useAvatarStyles\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/avatar.tsx\nvar import_system4 = require(\"@chakra-ui/system\");\nvar import_shared_utils = require(\"@chakra-ui/shared-utils\");\n\n// src/avatar-context.tsx\nvar import_react_context = require(\"@chakra-ui/react-context\");\nvar [AvatarStylesProvider, useAvatarStyles] = (0, import_react_context.createContext)({\n  name: `AvatarStylesContext`,\n  hookName: `useAvatarStyles`,\n  providerName: \"<Avatar/>\"\n});\n\n// src/avatar-image.tsx\nvar import_image = require(\"@chakra-ui/image\");\nvar import_system3 = require(\"@chakra-ui/system\");\nvar import_react = require(\"react\");\n\n// src/avatar-name.tsx\nvar import_system = require(\"@chakra-ui/system\");\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nfunction initials(name) {\n  var _a;\n  const names = name.split(\" \");\n  const firstName = (_a = names[0]) != null ? _a : \"\";\n  const lastName = names.length > 1 ? names[names.length - 1] : \"\";\n  return firstName && lastName ? `${firstName.charAt(0)}${lastName.charAt(0)}` : firstName.charAt(0);\n}\nfunction AvatarName(props) {\n  const {\n    name,\n    getInitials,\n    ...rest\n  } = props;\n  const styles = useAvatarStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.div, {\n    role: \"img\",\n    \"aria-label\": name,\n    ...rest,\n    __css: styles.label,\n    children: name ? getInitials == null ? void 0 : getInitials(name) : null\n  });\n}\nAvatarName.displayName = \"AvatarName\";\n\n// src/generic-avatar-icon.tsx\nvar import_system2 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime2 = require(\"react/jsx-runtime\");\nvar GenericAvatarIcon = props => /* @__PURE__ */(0, import_jsx_runtime2.jsxs)(import_system2.chakra.svg, {\n  viewBox: \"0 0 128 128\",\n  color: \"#fff\",\n  width: \"100%\",\n  height: \"100%\",\n  className: \"chakra-avatar__svg\",\n  ...props,\n  children: [/* @__PURE__ */(0, import_jsx_runtime2.jsx)(\"path\", {\n    fill: \"currentColor\",\n    d: \"M103,102.1388 C93.094,111.92 79.3504,118 64.1638,118 C48.8056,118 34.9294,111.768 25,101.7892 L25,95.2 C25,86.8096 31.981,80 40.6,80 L87.4,80 C96.019,80 103,86.8096 103,95.2 L103,102.1388 Z\"\n  }), /* @__PURE__ */(0, import_jsx_runtime2.jsx)(\"path\", {\n    fill: \"currentColor\",\n    d: \"M63.9961647,24 C51.2938136,24 41,34.2938136 41,46.9961647 C41,59.7061864 51.2938136,70 63.9961647,70 C76.6985159,70 87,59.7061864 87,46.9961647 C87,34.2938136 76.6985159,24 63.9961647,24\"\n  })]\n});\n\n// src/avatar-image.tsx\nvar import_jsx_runtime3 = require(\"react/jsx-runtime\");\nfunction AvatarImage(props) {\n  const {\n    src,\n    srcSet,\n    onError,\n    onLoad,\n    getInitials,\n    name,\n    borderRadius,\n    loading,\n    iconLabel,\n    icon = /* @__PURE__ */(0, import_jsx_runtime3.jsx)(GenericAvatarIcon, {}),\n    ignoreFallback,\n    referrerPolicy,\n    crossOrigin\n  } = props;\n  const status = (0, import_image.useImage)({\n    src,\n    onError,\n    crossOrigin,\n    ignoreFallback\n  });\n  const hasLoaded = status === \"loaded\";\n  const showFallback = !src || !hasLoaded;\n  if (showFallback) {\n    return name ? /* @__PURE__ */(0, import_jsx_runtime3.jsx)(AvatarName, {\n      className: \"chakra-avatar__initials\",\n      getInitials,\n      name\n    }) : (0, import_react.cloneElement)(icon, {\n      role: \"img\",\n      \"aria-label\": iconLabel\n    });\n  }\n  return /* @__PURE__ */(0, import_jsx_runtime3.jsx)(import_system3.chakra.img, {\n    src,\n    srcSet,\n    alt: name,\n    onLoad,\n    referrerPolicy,\n    crossOrigin: crossOrigin != null ? crossOrigin : void 0,\n    className: \"chakra-avatar__img\",\n    loading,\n    __css: {\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\",\n      borderRadius\n    }\n  });\n}\nAvatarImage.displayName = \"AvatarImage\";\n\n// src/avatar.tsx\nvar import_react2 = require(\"react\");\nvar import_jsx_runtime4 = require(\"react/jsx-runtime\");\nvar baseStyle = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  fontWeight: \"medium\",\n  position: \"relative\",\n  flexShrink: 0\n};\nvar Avatar = (0, import_system4.forwardRef)((props, ref) => {\n  const styles = (0, import_system4.useMultiStyleConfig)(\"Avatar\", props);\n  const [isLoaded, setIsLoaded] = (0, import_react2.useState)(false);\n  const {\n    src,\n    srcSet,\n    name,\n    showBorder,\n    borderRadius = \"full\",\n    onError,\n    onLoad: onLoadProp,\n    getInitials = initials,\n    icon = /* @__PURE__ */(0, import_jsx_runtime4.jsx)(GenericAvatarIcon, {}),\n    iconLabel = \" avatar\",\n    loading,\n    children,\n    borderColor,\n    ignoreFallback,\n    crossOrigin,\n    referrerPolicy,\n    ...rest\n  } = (0, import_system4.omitThemingProps)(props);\n  const avatarStyles = {\n    borderRadius,\n    borderWidth: showBorder ? \"2px\" : void 0,\n    ...baseStyle,\n    ...styles.container\n  };\n  if (borderColor) {\n    avatarStyles.borderColor = borderColor;\n  }\n  return /* @__PURE__ */(0, import_jsx_runtime4.jsx)(import_system4.chakra.span, {\n    ref,\n    ...rest,\n    className: (0, import_shared_utils.cx)(\"chakra-avatar\", props.className),\n    \"data-loaded\": (0, import_shared_utils.dataAttr)(isLoaded),\n    __css: avatarStyles,\n    children: /* @__PURE__ */(0, import_jsx_runtime4.jsxs)(AvatarStylesProvider, {\n      value: styles,\n      children: [/* @__PURE__ */(0, import_jsx_runtime4.jsx)(AvatarImage, {\n        src,\n        srcSet,\n        loading,\n        onLoad: (0, import_shared_utils.callAllHandlers)(onLoadProp, () => {\n          setIsLoaded(true);\n        }),\n        onError,\n        getInitials,\n        name,\n        borderRadius,\n        icon,\n        iconLabel,\n        ignoreFallback,\n        crossOrigin,\n        referrerPolicy\n      }), children]\n    })\n  });\n});\nAvatar.displayName = \"Avatar\";\n\n// src/avatar-badge.tsx\nvar import_system5 = require(\"@chakra-ui/system\");\nvar import_shared_utils2 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime5 = require(\"react/jsx-runtime\");\nvar placementMap = {\n  \"top-start\": {\n    top: \"0\",\n    insetStart: \"0\",\n    transform: \"translate(-25%, -25%)\"\n  },\n  \"top-end\": {\n    top: \"0\",\n    insetEnd: \"0\",\n    transform: \"translate(25%, -25%)\"\n  },\n  \"bottom-start\": {\n    bottom: \"0\",\n    insetStart: \"0\",\n    transform: \"translate(-25%, 25%)\"\n  },\n  \"bottom-end\": {\n    bottom: \"0\",\n    insetEnd: \"0\",\n    transform: \"translate(25%, 25%)\"\n  }\n};\nvar AvatarBadge = (0, import_system5.forwardRef)(function AvatarBadge2(props, ref) {\n  const {\n    placement = \"bottom-end\",\n    className,\n    ...rest\n  } = props;\n  const styles = useAvatarStyles();\n  const placementStyles = placementMap[placement];\n  const badgeStyles = {\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    ...placementStyles,\n    ...styles.badge\n  };\n  return /* @__PURE__ */(0, import_jsx_runtime5.jsx)(import_system5.chakra.div, {\n    ref,\n    ...rest,\n    className: (0, import_shared_utils2.cx)(\"chakra-avatar__badge\", className),\n    __css: badgeStyles\n  });\n});\nAvatarBadge.displayName = \"AvatarBadge\";\n\n// src/avatar-group.tsx\nvar import_system6 = require(\"@chakra-ui/system\");\nvar import_shared_utils3 = require(\"@chakra-ui/shared-utils\");\nvar import_react_children_utils = require(\"@chakra-ui/react-children-utils\");\n\n// ../../utilities/object-utils/src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0) delete clone[key];\n  }\n  return clone;\n}\n\n// src/avatar-group.tsx\nvar import_react3 = require(\"react\");\nvar import_jsx_runtime6 = require(\"react/jsx-runtime\");\nvar AvatarGroup = (0, import_system6.forwardRef)(function AvatarGroup2(props, ref) {\n  const styles = (0, import_system6.useMultiStyleConfig)(\"Avatar\", props);\n  const {\n    children,\n    borderColor,\n    max,\n    spacing = \"-0.75rem\",\n    borderRadius = \"full\",\n    ...rest\n  } = (0, import_system6.omitThemingProps)(props);\n  const validChildren = (0, import_react_children_utils.getValidChildren)(children);\n  const childrenWithinMax = max != null ? validChildren.slice(0, max) : validChildren;\n  const excess = max != null ? validChildren.length - max : 0;\n  const reversedChildren = childrenWithinMax.reverse();\n  const clones = reversedChildren.map((child, index) => {\n    var _a;\n    const isFirstAvatar = index === 0;\n    const childProps = {\n      marginEnd: isFirstAvatar ? 0 : spacing,\n      size: props.size,\n      borderColor: (_a = child.props.borderColor) != null ? _a : borderColor,\n      showBorder: true\n    };\n    return (0, import_react3.cloneElement)(child, compact(childProps));\n  });\n  const groupStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    flexDirection: \"row-reverse\",\n    ...styles.group\n  };\n  const excessStyles = {\n    borderRadius,\n    marginStart: spacing,\n    ...baseStyle,\n    ...styles.excessLabel\n  };\n  return /* @__PURE__ */(0, import_jsx_runtime6.jsxs)(import_system6.chakra.div, {\n    ref,\n    role: \"group\",\n    __css: groupStyles,\n    ...rest,\n    className: (0, import_shared_utils3.cx)(\"chakra-avatar__group\", props.className),\n    children: [excess > 0 && /* @__PURE__ */(0, import_jsx_runtime6.jsx)(import_system6.chakra.span, {\n      className: \"chakra-avatar__excess\",\n      __css: excessStyles,\n      children: `+${excess}`\n    }), clones]\n  });\n});\nAvatarGroup.displayName = \"AvatarGroup\";\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Avatar,\n  AvatarBadge,\n  AvatarGroup,\n  GenericAvatarIcon,\n  useAvatarStyles\n});","map":null,"metadata":{},"sourceType":"script"}