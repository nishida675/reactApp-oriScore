{"ast":null,"code":"var _jsxFileName = \"/Users/nishidanaoto/reactApp-oriScore/src/providers/LoginUserProvider.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, memo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoginUserContext = /*#__PURE__*/createContext({});\nexport const LoginUserProvider = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(props => {\n  _s();\n  const {\n    children\n  } = props;\n  const [loginUser, setLoginUser] = useState(null);\n  return /*#__PURE__*/_jsxDEV(LoginUserContext.Provider, {\n    value: {\n      loginUser,\n      setLoginUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}, \"ocTEO6sXRoxGC0Cs9JxC3OHDZM0=\")), \"ocTEO6sXRoxGC0Cs9JxC3OHDZM0=\");\n_c2 = LoginUserProvider;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoginUserProvider$memo\");\n$RefreshReg$(_c2, \"LoginUserProvider\");","map":{"version":3,"names":["React","createContext","useState","memo","jsxDEV","_jsxDEV","LoginUserContext","LoginUserProvider","_s","_c","props","children","loginUser","setLoginUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/nishidanaoto/reactApp-oriScore/src/providers/LoginUserProvider.tsx"],"sourcesContent":["import React, {\n  createContext,\n  Dispatch,\n  ReactNode,\n  SetStateAction,\n  useState,\n  memo,\n} from \"react\";\n\nimport { User } from \"../types/api/user\";\n\ntype LoginUser = User & { isAdmin: boolean };\n\nexport type LoginUserContextType = {\n  loginUser: LoginUser | null; \n  setLoginUser: Dispatch<SetStateAction<LoginUser | null>>;\n};\n\nexport const LoginUserContext = createContext<LoginUserContextType>(\n  {} as LoginUserContextType\n);\n\nexport const LoginUserProvider = memo((props: { children: ReactNode }) => {\n  const { children } = props;\n  const [loginUser, setLoginUser] = useState<LoginUser | null>(null);\n\n  return (\n    <LoginUserContext.Provider value={{ loginUser, setLoginUser }}>\n      {children}\n    </LoginUserContext.Provider>\n  );\n});"],"mappings":";;AAAA,OAAOA,KAAK,IACVC,aAAa,EAIbC,QAAQ,EACRC,IAAI,QACC,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWf,OAAO,MAAMC,gBAAgB,gBAAGL,aAAa,CAC3C,CAAC,CACH,CAAC;AAED,OAAO,MAAMM,iBAAiB,gBAAAC,EAAA,eAAGL,IAAI,CAAAM,EAAA,GAAAD,EAAA,CAAEE,KAA8B,IAAK;EAAAF,EAAA;EACxE,MAAM;IAAEG;EAAS,CAAC,GAAGD,KAAK;EAC1B,MAAM,CAACE,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAmB,IAAI,CAAC;EAElE,oBACEG,OAAA,CAACC,gBAAgB,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAEH,SAAS;MAAEC;IAAa,CAAE;IAAAF,QAAA,EAC3DA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEhC,CAAC,kCAAC;AAACC,GAAA,GATUb,iBAAiB;AAAA,IAAAE,EAAA,EAAAW,GAAA;AAAAC,YAAA,CAAAZ,EAAA;AAAAY,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}