{"ast":null,"code":"import React,{createContext,useState,memo}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export const LoginUserContext=/*#__PURE__*/createContext({});export const LoginUserProvider=/*#__PURE__*/memo(props=>{const{children}=props;const[loginUser,setLoginUser]=useState(null);return/*#__PURE__*/_jsx(LoginUserContext.Provider,{value:{loginUser,setLoginUser},children:children});});","map":{"version":3,"names":["React","createContext","useState","memo","jsx","_jsx","LoginUserContext","LoginUserProvider","props","children","loginUser","setLoginUser","Provider","value"],"sources":["/Users/nishidanaoto/ateori-app/src/providers/LoginUserProvider.tsx"],"sourcesContent":["import React, {\n  createContext,\n  Dispatch,\n  ReactNode,\n  SetStateAction,\n  useState,\n  memo,\n} from \"react\";\n\nimport { User } from \"../types/api/user\";\n\ntype LoginUser = User & { isAdmin: boolean };\n\nexport type LoginUserContextType = {\n  loginUser: LoginUser | null;\n  setLoginUser: Dispatch<SetStateAction<LoginUser | null>>;\n};\n\nexport const LoginUserContext = createContext<LoginUserContextType>(\n  {} as LoginUserContextType\n);\n\nexport const LoginUserProvider = memo((props: { children: ReactNode }) => {\n  const { children } = props;\n  const [loginUser, setLoginUser] = useState<LoginUser | null>(null);\n\n  return (\n    <LoginUserContext.Provider value={{ loginUser, setLoginUser }}>\n      {children}\n    </LoginUserContext.Provider>\n  );\n});"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EACVC,aAAa,CAIbC,QAAQ,CACRC,IAAI,KACC,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAWf,MAAO,MAAM,CAAAC,gBAAgB,cAAGL,aAAa,CAC3C,CAAC,CACH,CAAC,CAED,MAAO,MAAM,CAAAM,iBAAiB,cAAGJ,IAAI,CAAEK,KAA8B,EAAK,CACxE,KAAM,CAAEC,QAAS,CAAC,CAAGD,KAAK,CAC1B,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGT,QAAQ,CAAmB,IAAI,CAAC,CAElE,mBACEG,IAAA,CAACC,gBAAgB,CAACM,QAAQ,EAACC,KAAK,CAAE,CAAEH,SAAS,CAAEC,YAAa,CAAE,CAAAF,QAAA,CAC3DA,QAAQ,CACgB,CAAC,CAEhC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}